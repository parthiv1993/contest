{"version":3,"sources":["util.js","Login.js","Constants.js","Navigation.js","LiveAuction.js","PointsRemaining.js","YourTeam.js","AllPlayerDetails.js","PlayersRemaining.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["USER_KEY","TOKEN_KEY","getJwtToken","localStorage","getItem","getHeaderObject","headers","Authorization","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","e","onLogin","preventDefault","setState","target","value","react_default","a","createElement","style","height","Card","margin","width","top","bottom","Header","Body","Form","onSubmit","onLoginClick","bind","Group","controlId","Label","Control","type","placeholder","onChange","onInputChange","Button","variant","Footer","React","Component","Constants","ButtonWithWarning","onClick","confirm","warning","handler","buttonName","Navigation","isExtendedMenuOption","clear","window","location","reload","startAuctionRequest","then","res","toast","success","err","Axios","get","data","post","timeWait","inputText","keys","map","key","info","JSON","stringify","replace","autoClose","className","position","POSITION","TOP_CENTER","payload","command","concat","_this2","userName","Navbar","bg","Brand","href","Nav","logOut","Navigation_ButtonWithWarning","startAuctionHandler","timerHandler","parseInt","changeTimerWaitForSold","changeTimerWaitForNextPlayer","getStatus","tryTest","LiveAuction","currentAuctionInfo","bidAmt","getLiveAuctionInfo","interval","setInterval","clearInterval","_this3","_","isEqual","lastBid","bids","basePrize","Math","max","response","message","error","console","amt","ceil","_this4","playerId","doBidRequest","bidBy","_this5","markPlayerSoldRequest","_this6","bringNextPlayerRequest","currentPlayer","soldButtonName","length","size","float","onRefreshHandler","Row","Col","sm","team","timeLeft","soldTo","soldAt","marginLeft","step","onBlur","roundOff","handleBidInputChange","bid","markPlayerSoldHandler","bringNextPlayerHandler","DisplayBids","Table","striped","bordered","hover","index","PointsRemaining","points","remainingPointsRequest","as","YourTeam","getYourTeam","India","Pakistan","Australia","Afghanistan","South Africa","West Indies","New Zealand","Bangladesh","Sri Lanka","England","player","backgroundColor","getTeamColour","color","getTeamTextColor","Toolbar","onToggleFilter","abc","AllPlayerDetails","refreshDataHandler","getAllPlayerData","sortRows","initialRows","sortColumn","sortDirection","sort","b","handleFilterChange","filters","oldFilter","column","filterTerm","players","dPlayers","sortedPlayers","filteredPlayers","columns","sortable","filterable","doc","jsPDF","getRows","autoTable","head","body","save","log","CsvString","forEach","RowItem","encodeURIComponent","x","document","setAttribute","appendChild","click","rows","filteredRows","filterKey","term","filter","toString","toLowerCase","indexOf","display","download","downloadAsExcell","react_data_grid_default","rowGetter","i","objectSpread","srNo","rowsCount","minHeight","toolbar","AllPlayerDetails_Toolbar","onGridSort","setdPlayers","onAddFilter","setFilters","onClearFilters","PlayerRemaining","count","remainingPlayerRequest","HomePage","src_Navigation","lg","src_LiveAuction","PlayersRemaining","src_PointsRemaining","src_YourTeam","src_AllPlayerDetails","App","nickName","axios","constants","token","debugged","jwt","decode","setItem","user","saveJwt","forceUpdate","isAuthorized","src_HomePage","src_Login","login","lib","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d7778b2.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport const USER_KEY = 'WCAuction2User';\nexport const TOKEN_KEY = 'WCAuction2Token';\n\n\nexport function getJwtToken(){\n    return localStorage.getItem([TOKEN_KEY]);\n}\n\nexport function checkForJwt(){\n    if(getJwtToken()){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport function saveJwt(token){\n    try {\n        const debugged = jwt.decode(token);\n        if(debugged){\n            localStorage.setItem([TOKEN_KEY],token);\n            localStorage.setItem([USER_KEY],debugged.user)\n        }\n        \n    }\n    catch(e){\n        console.error(e);\n    }\n    \n}\n\nexport function getHeaderObject(){\n    const token = getJwtToken();\n\n    return { 'headers': { 'Authorization': token } }\n}","import React from 'react';\nimport { Button, Row, Col, Table ,Card, Form} from 'react-bootstrap';\n\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            name : ''\n        }\n    }\n\n    onLoginClick(e){\n        this.props.onLogin(this.state.name);\n        e.preventDefault();\n    }\n\n    onInputChange(e){\n        this.setState({\n            name:e.target.value\n        });\n    }\n\n    render(){\n        return (\n            // <div class=\"container d-flex h-100\">\n            // <div class=\"row justify-content-center align-self-center\">\n            <div style={{height:'-webkit-fill-available'}}>\n            <Card style={ {\n                    margin: 'auto',\n                    width: '400px',\n                    top: '25%',\n                    bottom: '0'\n                }}>\n                <Card.Header>\n                    Login\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={this.onLoginClick.bind(this)}>\n                        <Form.Group controlId=\"formNickName\">\n                            <Form.Label>Nick Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter your given NickName\" onChange={this.onInputChange.bind(this)}/>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n                <Card.Footer>\n                    Don't have a login ? Contact Parthiv\n                </Card.Footer>\n            </Card>\n            </div>\n            // </div>\n            // <div style={{margin:'auto'}}>\n            //     <form>\n            //         <label>\n            //             NickName :\n            //         </label>\n            //         <input value={this.state.name} onChange={this.onInputChange.bind(this)}/>\n            //         <button onClick={this.onLoginClick.bind(this)}>Login</button>\n            //     </form>\n            // </div>\n        );\n    }\n}\n\nexport default Login;","export default {\n    // BASE_URL : 'http://localhost:8080/api',\n    // BASE_URL : 'http://icc-wc2019.1d35.starter-us-east-1.openshiftapps.com/',\n    BASE_URL : '/api',\n    LIVE_POLL_TIME : 5000,\n    POINTS_POLL_TIME : 60000,\n    MYTEAM_POLL_TIME : 60000\n}\n","import React, { Component } from 'react';\nimport {Navbar,Nav,Form,FormControl,Button, Dropdown} from 'react-bootstrap';\nimport Axios from 'axios';\nimport Constants from './Constants';\nimport { getJwtToken, getHeaderObject, USER_KEY } from './util';\nimport { toast } from 'react-toastify';\nimport './navigation.css'\n\nconst ButtonWithWarning= (props)=> <Button variant=\"outline-info\" onClick={()=>{\n    //eslint-disable-next-line\n    if(confirm(props.warning)){\n        props.handler();\n    }\n}   \n}>{props.buttonName}</Button>\n\nclass Navigation extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isExtendedMenuOption :false\n        }\n    }\n\n    logOut(){\n        // const userName = localStorage.getItem([USER_KEY]) || 'User';\n  \n            localStorage.clear();\n            window.location.reload();\n    }\n\n    componentWillUnmount() {\n        localStorage.clear();\n    }\n\n    startAuctionHandler(){\n        this.startAuctionRequest().then(\n            (res)=>{\n                toast.success('Auction started. Enjoy the auction!!');\n            },\n            (err)=>{\n\n            }\n        )\n    }\n\n    startAuctionRequest(){\n        return Axios.get(Constants.BASE_URL +'/resetAuction',getHeaderObject());\n    }\n\n    timerHandler(){\n        Axios.get(Constants.BASE_URL +'/toggleTimerEnabled',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    pauseTimerNow(){\n        Axios.get(Constants.BASE_URL +'/pauseTimer',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    startTimerNow(){\n        Axios.get(Constants.BASE_URL +'/startTimer',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    changeTimerWaitForSold(){\n        Axios.post(Constants.BASE_URL +'/changeTimerWaitForSold',{timeWait:this.inputText*1000},getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    changeTimerWaitForNextPlayer(){\n        Axios.post(Constants.BASE_URL +'/changeTimerWaitForNextPlayer',{timeWait:this.inputText*1000},getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    getStatus(){\n        Axios.get(Constants.BASE_URL +'/getStatus',getHeaderObject()).then(\n            (res)=>{\n                if(res.data){\n                    try{\n                        Object.keys(res.data).map(\n                            key=>\n                                {toast.info(\n                                    [key]+' : ' +(JSON.stringify(res.data[key],null,4).replace(/\\,/g,'___').replace(/\\:/g,'=')\n                                ),{\n                                    autoClose:false,\n                                    className:'statusNotification',\n                                    position : toast.POSITION.TOP_CENTER\n                                }\n                                )\n                            }\n                        )\n                    }\n                    catch(e){\n\n                    }\n                }\n                toast.info(res.data,{\n                    autoClose: false\n                  });\n            },(err)=>{\n\n            }\n        )\n    }\n\n    tryTest(){\n        const payload = {\n            command : `cheatPlayerId = ${this.inputText}`\n        };\n        Axios.post(Constants.BASE_URL +'/eval',payload,getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n\n    render() {\n        const userName = localStorage.getItem([USER_KEY]) || 'User';\n\n        const originalNavBar = <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">{`Hi ${userName}`}</Navbar.Brand>\n                <Nav className=\"mr-auto\"></Nav>\n                <Button variant=\"outline-info\" onClick={this.logOut.bind(this)}>Log Out</Button>\n            </Navbar>;\n\n        const additionalOptions = <Navbar bg=\"dark\" variant=\"dark\">\n                {\n                    (userName=='Parthiv' || userName=='Nikhil') &&\n                    <ButtonWithWarning\n                            warning=\"You are about to restart the auction. Are you Sure?\"\n                            handler={this.startAuctionHandler.bind(this)}\n                            buttonName = {'Start Auction'}\n                    />\n                }\n                &nbsp;\n                {\n                    (userName=='Parthiv' || userName=='Nikhil') &&\n                    <ButtonWithWarning\n                            warning=\"You are about to toggle the timer. Are you Sure?\"\n                            handler={this.timerHandler.bind(this)}\n                            buttonName = {'Enable / Disable Timer'}\n                    />\n                }\n                &nbsp;\n                {\n                    (userName=='Parthiv') &&\n                    <input onChange={(e)=>{this.inputText = parseInt(e.target.value)}}></input>\n                }\n                &nbsp;\n                {\n                     (userName=='Parthiv') &&\n                     <ButtonWithWarning\n                            warning=\"You are Change Timer for marking player sold. Are you Sure?\"\n                            handler={this.changeTimerWaitForSold.bind(this)}\n                            buttonName = {'Change Time to Sold'}\n                    />\n                }\n                &nbsp;\n                {\n                     (userName=='Parthiv') &&\n                     <ButtonWithWarning\n                            warning=\"You are Change Timer for getiing next player. Are you Sure?\"\n                            handler={this.changeTimerWaitForNextPlayer.bind(this)}\n                            buttonName = {'Change Time to Next player'}\n                    />\n                }\n                &nbsp;\n                {\n                     (userName=='Parthiv') &&\n                     <ButtonWithWarning\n                            warning=\"You are about to get status. Are you Sure?\"\n                            handler={this.getStatus.bind(this)}\n                            buttonName = {'Get Status'}\n                    />\n                }\n                &nbsp;\n                {\n                     (userName=='Parthiv') &&\n                     <Button variant=\"outline-info\" onClick={()=>{\n                        //eslint-disable-next-line\n                        if(!confirm(\"You are about to get test. Are you Sure?\")){\n                            this.tryTest();\n                        }\n                    }   \n                    }>{'Test'}</Button>\n                    //  <ButtonWithWarning\n                    //         warning=\"You are about to get test. Are you Sure?\"\n                    //         handler={this.tryTest.bind(this)}\n                    //         buttonName = {'Test'}\n                    // />\n                }\n            </Navbar>;\n        return(\n            [\n                originalNavBar,\n                additionalOptions,\n            ]     \n        )\n    }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Constants from './Constants';\nimport { Button, Row, Col, Table ,Card} from 'react-bootstrap';\nimport Axios from 'axios';\nimport { getJwtToken, getHeaderObject, USER_KEY } from './util';\nimport _ from 'lodash';\nimport { toast } from 'react-toastify';\n\nclass LiveAuction extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentAuctionInfo : null,\n            bidAmt : 5\n        }\n    }\n\n    componentDidMount(){\n        this.getLiveAuctionInfo();\n        this.interval = setInterval(()=>{\n            this.getLiveAuctionInfo();\n        },Constants.LIVE_POLL_TIME)\n    }\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getLiveAuctionInfo(){\n        Axios.get(Constants.BASE_URL + '/liveAuctionInfo',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.currentAuctionInfo)){\n                    const lastBid = res.data.bids && res.data.bids[0] && res.data.bids[0].bidAmt+5 || 5;\n                    const basePrize = res.data.basePrize;\n                    const bidAmt = Math.max(basePrize,lastBid);\n                    this.setState({currentAuctionInfo:res.data,bidAmt})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err); \n            }\n        )\n    }\n\n    // startAuction(e){\n    //     e.preventDefault();\n    // }\n\n    roundOff(amt){\n        const bidAmt = Math.ceil(parseInt(amt.target.value)/5)*5;\n        this.setState({bidAmt});\n    }\n\n    handleBidInputChange(e){\n        this.setState({bidAmt:e.target.value});\n    }\n\n\n    bid(){\n        if(this.state.bidAmt && this.state.bidAmt>0){\n            const userName = localStorage.getItem([USER_KEY]) || 'User';\n            const playerId =this.state.currentAuctionInfo.playerId;\n            this.doBidRequest(playerId,this.state.bidAmt,userName).then(\n                (res)=>{\n                    // toast.success('Bid Successfully Placed');\n                    this.getLiveAuctionInfo()\n                },(err)=>{\n                    if(err && err.response && err.response.data && err.response.data.message){\n                        toast.error(err.response.data.message);\n                      }\n                    console.error(err); \n                }\n            )\n        }\n    }\n\n    doBidRequest(playerId,bidAmt,bidBy){\n        return Axios.post(Constants.BASE_URL +'/addBid',{playerId,bidAmt,bidBy},getHeaderObject())\n    }\n\n    markPlayerSoldHandler(){\n        this.markPlayerSoldRequest(this.state.currentAuctionInfo.playerId).then(\n            (res)=>{\n                if(res.data && res.data.message){\n                    toast.success(res.data.message)\n                }\n                this.getLiveAuctionInfo();\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    markPlayerSoldRequest(playerId){\n        return Axios.post(Constants.BASE_URL +'/markAsSold',{playerId},getHeaderObject());\n    }\n    \n    bringNextPlayerHandler(){\n        this.bringNextPlayerRequest().then(\n            res=>{\n                this.getLiveAuctionInfo();\n            },err=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.err(err);\n            }\n        )\n    }\n    bringNextPlayerRequest(){\n        return Axios.get(Constants.BASE_URL +'/bringNextPlayer',getHeaderObject());\n    }\n\n    onRefreshHandler(){\n        this.getLiveAuctionInfo();\n    }\n\n    render() {\n        const userName = localStorage.getItem([USER_KEY]) || 'User';\n        const currentPlayer = this.state.currentAuctionInfo;\n        const bidsPresent = currentPlayer && currentPlayer.bids && currentPlayer.bids.length && currentPlayer.bids.length>0 ? true : false;\n        const soldButtonName = bidsPresent ? 'Mark as Sold' : 'Mark as Unsold';\n        if(currentPlayer){\n            return(\n                <Card>\n                    <Card.Header>\n                        Current/ Last Player\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Row style={{margin:'0px'}}>\n                            <Col sm={12}>\n                                {`PlayerId : ${currentPlayer.playerId}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Player Name : ${currentPlayer.name}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Team : ${currentPlayer.team}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Base Prize : ${currentPlayer.basePrize}`}\n                            </Col>\n                            {/* <Col sm={12}>\n                                {`Grade : ${currentPlayer.grade}`}\n                            </Col> */}\n                            {/* <Col sm={12}>\n                                {`Nationality : ${currentPlayer.nationality}`}\n                            </Col> */}\n                            <Col sm={12}> \n                                {`Time Left : ${currentPlayer.timeLeft ? currentPlayer.timeLeft/1000-3: 'null'} Seconds`}\n                            </Col>\n                            {\n                                currentPlayer.soldTo &&\n                                    <span>\n                                        <Col sm={12}>\n                                            {`Sold to : ${currentPlayer.soldTo}`}\n                                        </Col>\n                                        <Col sm={12}>\n                                            {`Sold for : ${currentPlayer.soldAt} points`}\n                                        </Col>\n                                        \n                                    </span>\n                            }\n                            {!currentPlayer.soldTo &&\n                                <Col sm={12}>\n                                    <input style={{margin : '15px',marginLeft:'0px'}} type='number' step='5' \n                                        value={this.state.bidAmt }\n                                        placeholder='Bid Amount'\n                                        onBlur={this.roundOff.bind(this)}\n                                        onChange={this.handleBidInputChange.bind(this)}/>\n                                    {userName != 'readOnly' && <Button size='sm' onClick={this.bid.bind(this)}>Bid</Button>}\n                                </Col>\n                            }\n                            {!currentPlayer.soldTo && (userName === 'Parthiv' || userName ==='Nikhil') && \n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"danger\" \n                                            onClick={this.markPlayerSoldHandler.bind(this)}>{soldButtonName}\n                                        </Button>\n                                    </Col>\n                            }\n                            \n                            {\n                                currentPlayer.soldTo && (userName === 'Parthiv' || userName ==='Nikhil') && \n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"info\" \n                                            onClick={this.bringNextPlayerHandler.bind(this)}>Get Next Player\n                                        </Button>\n                                    </Col>\n                            }\n                            <Col sm={12}>\n                                {DisplayBids(currentPlayer.bids)}\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nconst DisplayBids=(bids)=>{\n    if(bids && bids.length>0) { \n        return(<div>\n            <h4>Previous Bids:</h4>\n            <Table striped={true} bordered={true} hover={true} size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>\n                            Bid By\n                        </th>\n                        <th>\n                            Bid Amt\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {bids.map((bid,index)=><tr key={index}>\n                    <td>\n                        {bid.bidBy}\n                    </td>\n                    <td>\n                        {bid.bidAmt}\n                    </td>\n                </tr>)}\n                </tbody>\n            </Table>\n        </div>)\n    }\n    return (<div>You Can Start Bidding</div>);\n}\n\nexport default LiveAuction;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject ,USER_KEY} from './util';\nimport Constants from './Constants';\nimport { Table, Card ,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass PointsRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            points : null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPointsRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPointsRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    remainingPointsRequest(){\n        Axios.get(Constants.BASE_URL + '/remaningPoints',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({points:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err); \n            }\n        )\n    }\n\n\n    onRefreshHandler(){\n        this.remainingPointsRequest();\n    }\n\n    render(){\n        const points =this.state.points;\n        const user = localStorage.getItem([USER_KEY]);\n        if(points ){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Points Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Team Owner\n                                        </th>\n                                        <th>\n                                            Points\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(points).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key}\n                                            </td>\n                                            <td>\n                                                {points[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PointsRemaining;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass YourTeam extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            team : null\n        }\n    }\n\n    componentDidMount(){\n        this.getYourTeam();\n        this.interval = setInterval(()=>{\n            this.getYourTeam();\n        },Constants.MYTEAM_POLL_TIME)\n    }\n\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getYourTeam(){\n        Axios.get(Constants.BASE_URL + '/myTeam',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.team)){\n                    this.setState({team:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.getYourTeam();\n    }\n\n\n    getTeamColour(team){\n        const obj ={\n            India : '#4286f4',\n            Pakistan : '#6fce6f',\n            Australia : '#eded25',\n            Afghanistan : '#1455a9',\n            'South Africa' : '#82bd63',\n            'West Indies' : '#932a52',\n            'New Zealand': '#080b0e',\n            Bangladesh :'#82bd63',\n            'Sri Lanka':'#0061f6',\n            England : '#3b5667'\n        }\n        return obj[team];\n    }\n\n    getTeamTextColor(team){\n        const obj = {\n            India : 'White',\n            Pakistan : 'White',\n            Australia : 'limegreen',\n            Afghanistan : 'Black',\n            'South Africa' : 'Yellow',\n            'West Indies' : 'White',\n            'New Zealand': 'White',\n            Bangladesh :'#174400',\n            'Sri Lanka':'Yellow',\n            England : 'White'\n        }\n        return obj[team];\n    }\n\n    render(){\n        const team = this.state.team;\n        if(team){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        My Team\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        {/* <div className='legend'>\n                            <ul style={ {listStyle: 'none' }}>\n                                <li style={{ float: 'left',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '24px', height: '24px', margin: '2px',backgroundColor:'cornflowerblue' }}>\n                                     </span>\n                                     <span>Indian</span>\n                                </li>\n                                <li style={{ float: 'right',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '24px', height: '24px', margin: '2px',backgroundColor:'palevioletred' }}>\n                                     </span>\n                                     <span>Overseas</span>\n                                </li>\n                            </ul>\n                        </div> */}\n                    <Table bordered='true' hover='true' size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Sr.\n                                    </th>\n                                    <th>\n                                        Player Name\n                                    </th>\n                                    <th>\n                                        Points\n                                    </th>\n                                    <th>\n                                        Team\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    team.map(\n                                        (player,index)=>\n                                            <tr key={index}>\n                                                <td>\n                                                    {index+1}\n                                                </td>\n                                                <td>\n                                                    {player.name}\n                                                </td>\n                                                <td>\n                                                    {player.soldAt}\n                                                </td>\n                                                <td style={{backgroundColor:`${this.getTeamColour(player.team)}`,color:`${this.getTeamTextColor(player.team)}`}}>\n                                                    {player.team}\n                                                </td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n                \n            )\n        }\n        return null;\n    }\n}\n\nexport default YourTeam;","import React, { useState }  from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card, Button} from 'react-bootstrap';\nimport ReactDataGrid from 'react-data-grid';\n// import { Toolbar, Data } from \"react-data-grid-addons\";\nimport './Grid.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { toast } from 'react-toastify';\n\n// const selectors = Data.Selectors;\n\nclass Toolbar extends React.Component{\n    render(){\n        return(<div><Button onClick={()=>this.props.onToggleFilter(this.abc)} style={{float:'right'}}>Filter</Button></div>)\n    }\n}\n\nclass AllPlayerDetails extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            players : [],\n            dPlayers : [],\n            sortedPlayers : [],\n            filteredPlayers : [],\n            filters : {}\n        }\n\n        this.columns = [\n            {key:'srNo',name :'Sr. No'},\n            { key: 'playerId', name: 'Player ID', sortable:true,filterable : true},\n            { key: 'name', name: 'Player Name' ,sortable:true,filterable : true},\n            { key: 'team', name: 'Team' ,sortable:true,filterable :true},\n            { key: 'soldTo', name: 'Sold To' ,sortable:true,filterable : true} ,\n            { key: 'soldAt', name: 'Price' ,sortable:true} ,\n            {key:'basePrize',name : 'BasePrize'}\n        ]\n    }\n\n    componentDidMount(){\n        this.getAllPlayerData();\n    }\n    \n    getAllPlayerData(){\n        Axios.get(Constants.BASE_URL + '/allPlayers',getHeaderObject()).then(\n            (res)=>{\n                this.setState({players:res.data,dPlayers:res.data})\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    refreshDataHandler= ()=>{\n        this.getAllPlayerData();\n    }\n    \n    download (){\n        try{\n            const doc = new jsPDF();\n            const filteredPlayers = this.getRows(this.state.dPlayers, this.state.filters);\n            doc.autoTable({\n                head: [['ID','Player Name','Team','Sold At','Sold To','basePrize','\\r\\n']],\n                body:filteredPlayers.map(player=>\n                    [\n                        player.playerId,\n                        player.name,\n                        player.team,\n                        player.soldAt,\n                        player.soldTo,\n                        player.basePrize\n                    ]\n                )\n            });\n            doc.save('summary.pdf');\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    downloadAsExcell(){\n        try{\n            const filteredPlayers = this.getRows(this.state.dPlayers, this.state.filters);\n            var CsvString = \"Player Id,Name,Team,Sold At,Sold To,basePrize,Bids\\r\\n\";\n            filteredPlayers.forEach(function(RowItem) {\n                for(var key in RowItem){\n                    CsvString += JSON.stringify(RowItem[key]).replace(/\\,/g,'') + ',';\n                }\n                CsvString += \"\\r\\n\";\n            });\n            CsvString = \"data:application/csv,\" + encodeURIComponent(CsvString);\n            var x = document.createElement(\"A\");\n            x.setAttribute(\"href\", CsvString );\n            x.setAttribute(\"download\",\"WCauction1.csv\");\n            document.body.appendChild(x);\n            x.click();\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    setdPlayers(dPlayers){\n        this.setState({dPlayers});\n    }\n\n    getRows(rows, filters) {\n        var filteredRows = rows;\n        Object.keys(filters).map(filterKey=>{\n            const term = filters[filterKey].filterTerm;\n            filteredRows = filteredRows.filter((value)=>{\n                return value[filterKey] && (value[filterKey].toString().toLowerCase()).indexOf(term.toLowerCase())>-1\n            });\n        })\n        return filteredRows;\n    }\n\n    sortRows = (initialRows, sortColumn, sortDirection) =>  {\n        const comparer = (a, b) => { \n            if (sortDirection === \"ASC\") {\n                return a[sortColumn] > b[sortColumn] ? 1 : -1;\n            } else if (sortDirection === \"DESC\") {\n                return a[sortColumn] < b[sortColumn] ? 1 : -1;\n            }\n        };\n        \n        return sortDirection === \"NONE\" ? initialRows : initialRows.sort(comparer);\n    };\n\n    handleFilterChange = filters => {\n        // const newFilters = { ...filters };\n        const oldFilter = this.state.filters;\n        const key = filters.column.key;\n\n        if (filters.filterTerm) {\n          oldFilter[key] = filters;\n        } else {\n          delete oldFilter[key];\n        }\n        return oldFilter;\n    };\n\n    setFilters(filters){\n        this.setState({filters});\n    }\n\n    render(){\n        var players = this.state.players;\n        const dPlayers = this.state.dPlayers;\n        const filters = this.state.filters;\n        const filteredRows = this.getRows(dPlayers, filters);\n        if(players &&players.length>0){\n            return(\n                <div>\n                    <h2 style={{display:'inline-block'}}>\n                        All PLayers Data \n                    </h2>\n                    &nbsp;\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.download.bind(this)}>\n                        Download PDF\n                    </Button>\n                    &nbsp;<span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.downloadAsExcell.bind(this)}>\n                        Download Excell\n                    </Button>\n                    <span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.refreshDataHandler.bind(this)}>\n                        Refresh Data\n                    </Button>\n                    <ReactDataGrid\n                        columns={this.columns}\n                        rowGetter={i => {\n                            return {\n                                srNo:i+1,\n                            ...filteredRows[i]\n                            }\n                            }\n                        }\n                        rowsCount={filteredRows.length}\n                        minHeight={500}\n                        toolbar={<Toolbar/>}\n                        onGridSort={(sortColumn, sortDirection) => this.setdPlayers(this.sortRows(players, sortColumn, sortDirection))}\n                        onAddFilter={filter => this.setFilters(this.handleFilterChange(filter))}\n                        onClearFilters={() => this.setFilters({})}\n                    />\n                </div>\n            )\n        }\n        return null;\n    }\n}\n\nexport default AllPlayerDetails;\n\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject ,USER_KEY} from './util';\nimport Constants from './Constants';\nimport { Table, Card, Button } from 'react-bootstrap';\n\n\nclass PlayerRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            count:null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPlayerRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPlayerRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n\n    remainingPlayerRequest(){\n        Axios.get(Constants.BASE_URL + '/getRemainingPlayersCount',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({count:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.remainingPlayerRequest();\n    }\n\n    render(){\n        const count = this.state.count;\n        const user = localStorage.getItem([USER_KEY]);\n        if(count){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Players Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Type\n                                        </th>\n                                        <th>\n                                            Number of Players\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(count).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key.replace('_',' ')}\n                                            </td>\n                                            <td>\n                                                {count[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PlayerRemaining;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport LiveAuction from './LiveAuction';\nimport { Row,Col } from 'react-bootstrap';\nimport PointsRemaining from './PointsRemaining';\nimport YourTeam from './YourTeam';\nimport AllPlayerDetails from './AllPlayerDetails';\nimport PlayersRemaining from './PlayersRemaining';\n\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n          <Navigation/>\n          <br/>\n          <br/>\n          <Row style={{margin:'0px'}}>\n            <Col sm={12} lg={3} >\n              <LiveAuction/>\n              </Col>\n            <Col sm={12} lg={3} >\n              <PlayersRemaining/>\n              </Col>\n            <Col  sm={12} lg={3}>\n              <PointsRemaining/>\n            </Col>\n            <Col sm={12} lg={3}>\n              <YourTeam/>\n            </Col>\n            <Col sm={12}>\n              <br/>\n            </Col>\n            <Col sm={12}>\n              <AllPlayerDetails/>\n            </Col>\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { checkForJwt, saveJwt } from './util';\nimport Login from './Login';\nimport HomePage from './HomePage';\nimport axios from 'axios';\nimport constants from './Constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n\n  login(nickName){\n    axios.post(constants.BASE_URL+'/login',{nickName}).then((res)=>{\n      saveJwt(res.data.token)\n      this.forceUpdate();\n    },(err)=>{\n        if(err && err.response && err.response.data && err.response.data.message){\n          toast.error(err.response.data.message);\n        }\n      console.log(err.response);\n    })\n  }\n\n  render() {\n    const isAuthorized = checkForJwt();\n    return (\n      <div>{isAuthorized?<HomePage/>:<Login onLogin={this.login.bind(this)}/>}<ToastContainer /></div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}