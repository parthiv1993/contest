{"version":3,"sources":["util.js","Login.js","Constants.js","Navigation.js","LiveAuction.js","PointsRemaining.js","YourTeam.js","AllPlayerDetails.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["getJwtToken","localStorage","getItem","getHeaderObject","headers","Authorization","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","e","onLogin","preventDefault","setState","target","value","react_default","a","createElement","onChange","onInputChange","bind","onClick","onLoginClick","React","Component","Constants","Navigation","clear","window","location","reload","startAuctionRequest","then","res","err","Axios","get","userName","Navbar","bg","variant","Brand","href","concat","Nav","className","Button","startAuctionHandler","logOut","LiveAuction","currentAuctionInfo","bidAmt","_this2","getLiveAuctionInfo","interval","setInterval","clearInterval","_this3","_","isEqual","data","bids","console","error","amt","Math","ceil","parseInt","_this4","playerId","doBidRequest","bidBy","post","_this5","markPlayerSoldRequest","_this6","bringNextPlayerRequest","currentPlayer","Card","Header","Body","Row","style","margin","Col","sm","team","grade","soldTo","type","step","placeholder","onBlur","roundOff","handleBidInputChange","size","bid","markPlayerSoldHandler","soldAt","bringNextPlayerHandler","DisplayBids","length","Table","striped","bordered","hover","map","index","key","PointsRemaining","points","remainingPointsRequest","as","keys","YourTeam","getYourTeam","triped","player","selectors","Data","Selectors","sortRows","initialRows","sortColumn","sortDirection","rows","toConsumableArray","sort","b","handleFilterChange","filter","filters","newFilters","objectSpread","filterTerm","column","columns","sortable","filterable","Grid","_ref","players","_useState","useState","_useState2","slicedToArray","setRows","_useState3","_useState4","setFilters","filteredRows","getRows","react_data_grid_default","rowGetter","i","rowsCount","minHeight","toolbar","react_data_grid_addons","enableFilter","onGridSort","onAddFilter","onClearFilters","AllPlayerDetails","refreshDataHandler","getAllPlayerData","doc","jsPDF","autoTable","head","body","nationality","save","display","float","download","AllPlayerDetails_Grid","HomePage","src_Navigation","lg","src_LiveAuction","src_PointsRemaining","src_YourTeam","src_AllPlayerDetails","App","nickName","axios","constants","token","debugged","jwt","decode","setItem","user","saveJwt","forceUpdate","log","isAuthorized","src_HomePage","src_Login","login","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d60f68e.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport function getJwtToken(){\n    return localStorage.getItem('token');\n}\n\nexport function checkForJwt(){\n    if(getJwtToken()){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport function saveJwt(token){\n    try {\n        const debugged = jwt.decode(token);\n        if(debugged){\n            localStorage.setItem('token',token);\n            localStorage.setItem('user',debugged.user)\n        }\n        \n    }\n    catch(e){\n        console.error(e);\n    }\n    \n}\n\nexport function getHeaderObject(){\n    const token = getJwtToken();\n\n    return { 'headers': { 'Authorization': token } }\n}","import React from 'react';\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            name : ''\n        }\n    }\n\n    onLoginClick(e){\n        this.props.onLogin(this.state.name);\n        e.preventDefault();\n    }\n\n    onInputChange(e){\n        this.setState({\n            name:e.target.value\n        });\n    }\n\n    render(){\n        return (\n            <div>\n                <form>\n                    <label>\n                        NickName :\n                    </label>\n                    <input value={this.state.name} onChange={this.onInputChange.bind(this)}/>\n                    <button onClick={this.onLoginClick.bind(this)}>Login</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;","export default {\n    BASE_URL : 'http://localhost:8080/api',\n    LIVE_POLL_TIME : 5000,\n    POINTS_POLL_TIME : 10000,\n    MYTEAM_POLL_TIME : 15000\n}","import React, { Component } from 'react';\nimport {Navbar,Nav,Form,FormControl,Button} from 'react-bootstrap';\nimport Axios from 'axios';\nimport Constants from './Constants';\nimport { getJwtToken, getHeaderObject } from './util';\n\n\nclass Navigation extends Component {\n    logOut(){\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    startAuctionHandler(){\n        this.startAuctionRequest().then(\n            (res)=>{\n\n            },\n            (err)=>[\n\n            ]\n        )\n    }\n\n    startAuctionRequest(){\n        return Axios.get(Constants.BASE_URL +'/resetAuction',getHeaderObject());\n    }\n\n    render() {\n        const userName = localStorage.getItem('user') || 'User';\n        return(\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">{`Hi ${userName}`}</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                {/* <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#features\">Features</Nav.Link>\n                <Nav.Link href=\"#pricing\">Pricing</Nav.Link> */}\n                </Nav>\n                {\n                    userName=='Parthiv' &&\n                    <Button variant=\"outline-info\" onClick={this.startAuctionHandler.bind(this)}>Start Auction</Button>\n                }\n                <Button variant=\"outline-info\" onClick={this.logOut.bind(this)}>Log Out</Button>\n            </Navbar>\n                    \n        )\n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport Constants from './Constants';\nimport { Button, Row, Col, Table ,Card} from 'react-bootstrap';\nimport Axios from 'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport _ from 'lodash';\n\n// import {Navbar,Nav,Form,FormControl,Button} from 'react-bootstrap';\n\nclass LiveAuction extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentAuctionInfo : null,\n            bidAmt : null\n        }\n    }\n\n    componentDidMount(){\n        this.getLiveAuctionInfo();\n        this.interval = setInterval(()=>{\n            this.getLiveAuctionInfo();\n        },Constants.LIVE_POLL_TIME)\n    }\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getLiveAuctionInfo(){\n        Axios.get(Constants.BASE_URL + '/liveAuctionInfo',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.currentAuctionInfo)){\n                    \n                    const bidAmt = res.data.bids && res.data.bids[0] && res.data.bids[0].bidAmt+5\n                    this.setState({currentAuctionInfo:res.data,bidAmt})\n                }\n            },(err)=>{\n                console.error(err); \n            }\n        )\n    }\n\n    startAuction(e){\n        e.preventDefault();\n    }\n\n    roundOff(amt){\n        const bidAmt = Math.ceil(parseInt(amt.target.value)/5)*5;\n        this.setState({bidAmt});\n    }\n\n    handleBidInputChange(e){\n        this.setState({bidAmt:e.target.value});\n    }\n\n\n    bid(){\n        if(this.state.bidAmt && this.state.bidAmt>0){\n            const userName = localStorage.getItem('user') || 'User';\n            const playerId =this.state.currentAuctionInfo.playerId;\n            this.doBidRequest(playerId,this.state.bidAmt,userName).then(\n                (res)=>{\n                    this.getLiveAuctionInfo()\n                }\n            )\n        }\n    }\n\n    doBidRequest(playerId,bidAmt,bidBy){\n        return Axios.post(Constants.BASE_URL +'/addBid',{playerId,bidAmt,bidBy},getHeaderObject())\n    }\n\n    markPlayerSoldHandler(){\n        this.markPlayerSoldRequest(this.state.currentAuctionInfo.playerId).then(\n            (res)=>{\n                this.getLiveAuctionInfo()\n            }\n        )\n    }\n\n    markPlayerSoldRequest(playerId){\n        return Axios.post(Constants.BASE_URL +'/markAsSold',{playerId},getHeaderObject());\n    }\n    \n    bringNextPlayerHandler(){\n        this.bringNextPlayerRequest().then(\n            res=>{\n                this.getLiveAuctionInfo();\n            },err=>{\n                console.err(err);\n            }\n        )\n    }\n    bringNextPlayerRequest(){\n        return Axios.get(Constants.BASE_URL +'/bringNextPlayer',getHeaderObject());\n    }\n\n    render() {\n        const userName = localStorage.getItem('user') || 'User';\n        const currentPlayer = this.state.currentAuctionInfo;\n        if(currentPlayer){\n            return(\n                <Card>\n                    <Card.Header>\n                        Current/ Last Player\n                    </Card.Header>\n                    <Card.Body>\n                        <Row style={{margin:'0px'}}>\n                            <Col sm={12}>\n                                {`PlayerId : ${currentPlayer.playerId}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Player Name : ${currentPlayer.name}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Team : ${currentPlayer.team}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Grade : ${currentPlayer.grade}`}\n                            </Col>\n                                {!currentPlayer.soldTo &&\n                                    <Col sm={12}>\n                                    <input style={{margin : '15px'}} type='number' step='5' \n                                        value={this.state.bidAmt}\n                                        placeholder='Bid Amount'\n                                        onBlur={this.roundOff.bind(this)}\n                                        onChange={this.handleBidInputChange.bind(this)}/>\n                                    {userName != 'readOnly' && <Button size='sm' onClick={this.bid.bind(this)}>Bid</Button>} &nbsp;\n                                    {(userName === 'Parthiv' || userName ==='Nikhil')&& \n                                        <span>\n                                        <Button size='sm' variant=\"danger\" \n                                            onClick={this.markPlayerSoldHandler.bind(this)}>Mark as Sold\n                                        </Button>\n                                        \n                                        </span>\n                                    }\n                                    </Col>\n                                }\n                                {\n                                    currentPlayer.soldTo &&\n                                    <span>\n                                        <Col sm={12}>\n                                            {`Sold to : ${currentPlayer.soldTo}`}\n                                        </Col>\n                                        <Col sm={12}>\n                                            {`Sold for : ${currentPlayer.soldAt} points`}\n                                        </Col>\n                                        \n                                    </span>\n                                }\n                                <Col sm={12}>\n                                        <Button size='sm' variant=\"info\" \n                                            onClick={this.bringNextPlayerHandler.bind(this)}>Next Player\n                                        </Button>\n                                        </Col>\n                            <Col sm={12}>\n                                {DisplayBids(currentPlayer.bids)}\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nconst DisplayBids=(bids)=>{\n    if(bids && bids.length>0) { \n        return(<div>\n            <h4>Previous Bids:</h4>\n            <Table striped={true} bordered={true} hover={true} size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>\n                            Bid By\n                        </th>\n                        <th>\n                            Bid Amt\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {bids.map((bid,index)=><tr key={index}>\n                    <td>\n                        {bid.bidBy}\n                    </td>\n                    <td>\n                        {bid.bidAmt}\n                    </td>\n                </tr>)}\n                </tbody>\n            </Table>\n        </div>)\n    }\n    return (<div>You Can Start Bidding</div>);\n}\n\nexport default LiveAuction;","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table, Card } from 'react-bootstrap';\n\n\nclass PointsRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            points : null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPointsRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPointsRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    remainingPointsRequest(){\n        Axios.get(Constants.BASE_URL + '/remaningPoints',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({points:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n \n\n\n    render(){\n        const points =this.state.points;\n        const user = localStorage.getItem('user');\n        if(points){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Points Remaining\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Team Owner\n                                        </th>\n                                        <th>\n                                            Points\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(points).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key}\n                                            </td>\n                                            <td>\n                                                {points[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PointsRemaining;","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card} from 'react-bootstrap';\n\n\nclass YourTeam extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            team : null\n        }\n    }\n\n    componentDidMount(){\n        this.getYourTeam();\n        this.interval = setInterval(()=>{\n            this.getYourTeam();\n        },Constants.MYTEAM_POLL_TIME)\n    }\n\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getYourTeam(){\n        Axios.get(Constants.BASE_URL + '/myTeam',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.team)){\n                    this.setState({team:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    render(){\n        const team = this.state.team;\n        if(team){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">My Team</Card.Header>\n                    <Card.Body>\n                    <Table triped='true' bordered='true' hover='true' size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Player Name\n                                    </th>\n                                    <th>\n                                        Points\n                                    </th>\n                                    <th>\n                                        Team\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    team.map(\n                                        (player,index)=>\n                                            <tr key={index}>\n                                                <td>\n                                                    {player.name}\n                                                </td>\n                                                <td>\n                                                    {player.soldAt}\n                                                </td>\n                                                <td>\n                                                    {player.team}\n                                                </td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n                \n            )\n        }\n        return null;\n    }\n}\n\nexport default YourTeam;","import React, { useState }  from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card, Button} from 'react-bootstrap';\nimport ReactDataGrid from 'react-data-grid';\nimport { Toolbar, Data } from \"react-data-grid-addons\";\nimport './Grid.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nconst selectors = Data.Selectors;\nconst sortRows = (initialRows, sortColumn, sortDirection) => rows => {\n    const comparer = (a, b) => {\n        if (sortDirection === \"ASC\") {\n            return a[sortColumn] > b[sortColumn] ? 1 : -1;\n        } else if (sortDirection === \"DESC\") {\n            return a[sortColumn] < b[sortColumn] ? 1 : -1;\n        }\n    };\n    return sortDirection === \"NONE\" ? initialRows : [...rows].sort(comparer);\n};\n\nconst handleFilterChange = filter => filters => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\nconst columns = [\n    { key: 'playerId', name: 'Player ID', sortable:true,filterable : true},\n    { key: 'name', name: 'Player Name' ,sortable:true,filterable : true},\n    { key : 'grade',name:'Grade',sortable:true,filterable :true},\n    { key: 'team', name: 'IPL Team' ,sortable:true,filterable :true},\n    { key: 'soldTo', name: 'Sold To' ,sortable:true,filterable : true} ,\n    { key: 'soldAt', name: 'Price' ,sortable:true} \n]\n\nfunction getRows(rows, filters) {\n    return selectors.getRows({ rows, filters });\n}\n\nfunction Grid({ players }) {\n    const [rows, setRows] = useState(players);\n    const [filters, setFilters] = useState({});\n    const filteredRows = getRows(rows, filters);\n    return (\n        <ReactDataGrid\n            columns={columns}\n            rowGetter={i => filteredRows[i]}\n            rowsCount={filteredRows.length}\n            minHeight={500}\n            toolbar={<Toolbar enableFilter={true} />}\n            onGridSort={(sortColumn, sortDirection) => setRows(sortRows(players, sortColumn, sortDirection))}\n            onAddFilter={filter => setFilters(handleFilterChange(filter))}\n            onClearFilters={() => setFilters({})}\n      />\n    );\n}\n\nclass AllPlayerDetails extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            players : []\n        }\n    }\n\n    componentDidMount(){\n        this.getAllPlayerData();\n    }\n    \n    getAllPlayerData(){\n        Axios.get(Constants.BASE_URL + '/allPlayers',getHeaderObject()).then(\n            (res)=>{\n                this.setState({players:res.data})\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    refreshDataHandler= ()=>{\n\n        this.getAllPlayerData();\n    }\n    \n    download (){\n        try{\n            const doc = new jsPDF();\n\n            doc.autoTable({\n                head: [['ID','Player Name','Team','Sold At','Sold To','Grade','Nationality']],\n                body:this.state.players.map(player=>\n                    [\n                        player.playerId,\n                        player.name,\n                        player.team,\n                        player.soldAt,\n                        player.soldTo,\n                        player.grade,\n                        player.nationality\n                    ]\n                )\n            });\n            doc.save('summary.pdf');\n        }\n        catch(e){\n\n        }\n    }\n\n    render(){\n        var players = this.state.players;\n        if(players &&players.length>0){\n            return(\n                <div>\n                    <h2 style={{display:'inline-block'}}>\n                        All PLayers Data \n                    </h2>\n                    &nbsp;\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.download.bind(this)}>\n                        Download Summary\n                    </Button>\n                    <span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.refreshDataHandler.bind(this)}>\n                        Refresh Data\n                    </Button>\n                    <Grid players={players}/>\n                </div>\n            )\n        }\n        return null;\n    }\n}\n\nexport default AllPlayerDetails;\n\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport LiveAuction from './LiveAuction';\nimport { Row,Col } from 'react-bootstrap';\nimport PointsRemaining from './PointsRemaining';\nimport YourTeam from './YourTeam';\nimport AllPlayerDetails from './AllPlayerDetails';\n\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n          <Navigation/>\n          <br/>\n          <br/>\n          <Row style={{margin:'0px'}}>\n            <Col sm={12} lg={6} >\n              <LiveAuction/>\n              </Col>\n            <Col  sm={12} lg={3}>\n              <PointsRemaining/>\n            </Col>\n            <Col sm={12} lg={3}>\n              <YourTeam/>\n            </Col>\n            <Col sm={12}>\n              <br/>\n            </Col>\n            <Col sm={12}>\n              <AllPlayerDetails/>\n            </Col>\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { checkForJwt, saveJwt } from './util';\nimport Login from './Login';\nimport HomePage from './HomePage';\nimport axios from 'axios';\nimport constants from './Constants';\n\nclass App extends Component {\n\n  login(nickName){\n    axios.post(constants.BASE_URL+'/login',{nickName}).then((res)=>{\n      saveJwt(res.data.token)\n      this.forceUpdate();\n    },(err)=>{\n      console.log(err);\n    })\n  }\n\n  render() {\n    const isAuthorized = checkForJwt();\n    return (\n      <div>{isAuthorized?<HomePage/>:<Login onLogin={this.login.bind(this)}/>}</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}