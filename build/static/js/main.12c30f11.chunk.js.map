{"version":3,"sources":["helpers/util.js","pages/Login.js","helpers/Constants.js","components/NavigationsBar/Navigation.js","components/NavigationsBar/index.js","components/LiveAuction/DisplayAddedBids.js","components/LiveAuction/DisplayLiveAuctionDetails.js","components/LiveAuction/index.js","components/LiveAuction/LiveAuction.js","components/PointsRemaining/index.js","components/PointsRemaining/PointsRemaining.js","components/YourTeam/YourTeam.js","components/AllPlayerDetails/AllPlayerDetails.js","components/AllPlayerDetails/index.js","components/PlayersRemaining/index.js","components/PlayersRemaining/PlayersRemaining.js","pages/HomePage.js","helpers/interceptors.js","App.js","serviceWorker.js","index.js"],"names":["USER_KEY","TOKEN_KEY","USER_PRIVILEGE","getJwtToken","localStorage","getItem","getPrivilege","Number","e","console","error","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","onLogin","preventDefault","setState","target","value","react_default","a","createElement","style","height","Card","margin","width","top","bottom","Header","Body","Form","onSubmit","onLoginClick","bind","Group","controlId","Label","Control","type","placeholder","onChange","onInputChange","Button","variant","Footer","React","Component","BASE_URL","constants","LIVE_POLL_TIME","POINTS_POLL_TIME","MYTEAM_POLL_TIME","urls","getMyTeam","getPointsRemaining","getRemainingPlayers","getLiveAuctionInfo","placeBid","markPlayerAsSold","bringNextPlayer","getAllPlayersData","startAuction","toggleTimer","pauseTimer","startTimer","changeTimerForSold","changeTImerForNextPlayer","evaluation","privileges","INACTIVE_USER","ACTIVE_USER","CORDINATOR","ADMIN","ButtonWithWarning","marginLeft","onClick","window","confirm","warning","handler","buttonName","Navigation","userName","isAdmin","_useState","useState","_useState2","slicedToArray","isOpened","setIsOpened","_useState3","_useState4","configValue","setConfigValue","additionalOptions","Navigation_ButtonWithWarning","Axios","post","then","toast","success","get","res","data","parseInt","payload","timeWait","err","command","concat","Fragment","Navbar","bg","Brand","href","Nav","className","Link","clear","location","reload","DisplayAddedBids","bids","length","Col","sm","Table","striped","bordered","hover","size","map","bid","key","bidBy","bidAmt","getTableRow","LiveAuctionDetails","currentPlayer","player","minBid","setBid","useEffect","roundOff","amt","Math","ceil","playerId","team","grade","timeLeft","soldTo","soldAt","step","onBlur","event","onBid","isPlayerSold","Boolean","isUserCordinatorOrAbove","soldButtonName","bringNextPlayerHandler","markPlayerSoldHandler","addSoldButtonAndGetNextPlayerButton","LiveAuction","currentAuctionInfo","_this2","interval","setInterval","Constants","clearInterval","_this3","_","isEqual","response","message","_this4","doBidRequest","_this5","markPlayerSoldRequest","_this6","bringNextPlayerRequest","_this7","float","onRefreshHandler","Row","DisplayLiveAuctionDetails","LiveAuction_DisplayAddedBids","PointsRemaining","points","remainingPointsRequest","user","as","getTableHeader","keys","sort","YourTeam","getYourTeam","CSK","MI","KKR","SRH","RCB","KXIP","DC","RR","index","backgroundColor","getTeamColour","color","getTeamTextColor","getTableHeaderRow","FilterToolBar","onToggleFilter","AllPlayerDetails","players","setPlayers","filteredPlayers","setFilteredPlayers","_useState5","_useState6","filter","setFilter","getAllPlayerData","asExcell","filteredPlayersCopy","cloneDeep","CsvString","forEach","RowItem","JSON","stringify","replace","encodeURIComponent","x","document","setAttribute","body","appendChild","click","log","asPdf","doc","jsPDF","autoTable","head","save","onFilterChange","newFilter","oldFilter","column","filterTerm","filteredRows","clone","filterKey","term","toString","toLowerCase","indexOf","filterRows","getConfigButtons","display","react_data_grid_default","columns","sortable","filterable","rowGetter","i","objectSpread","srNo","rowsCount","minHeight","toolbar","AllPlayerDetails_FilterToolBar","onGridSort","sortColumn","sortDirection","xyz","b","sortRows","onAddFilter","onClearFilters","PlayersRemaining","PlayerRemaining","remainingPlayerRequest","count","HomePage","NavigationsBar","lg","components_LiveAuction","components_PlayersRemaining","components_PointsRemaining","components_YourTeam_YourTeam","components_AllPlayerDetails","addRequestHeader","request","headers","App","axios","interceptors","use","nickName","token","debugged","jwt","decode","setItem","privilege","saveJwt","forceUpdate","isAuthorized","pages_HomePage","pages_Login","login","lib","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12c30f11.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport const USER_KEY = 'IPL2021UserAuction2';\nexport const TOKEN_KEY = 'IPL2021TokenAuction2';\nexport const USER_PRIVILEGE = 'IPL2021PrivilegeAuction2';\n\n\nexport function getJwtToken(){\n    return localStorage.getItem([TOKEN_KEY]);\n}\n\nexport function checkForJwt(){\n    return getJwtToken() ? true : false\n}\n\nexport function saveJwt(token){\n    try {\n        const debugged = jwt.decode(token);\n        console.log(debugged)\n        if(debugged){\n            localStorage.setItem([TOKEN_KEY],token);\n            localStorage.setItem([USER_KEY],debugged.user);\n            localStorage.setItem([USER_PRIVILEGE],debugged.privilege);\n        }\n    }\n    catch(e){\n        console.error(e);\n    }\n    \n}\n\nexport function getPrivilege(){\n    try{\n        return Number(localStorage.getItem([USER_PRIVILEGE]))\n    }\n    catch(e){\n        console.error(e);\n        return 0;\n    }\n}\n","import React from 'react';\nimport { Button,Card, Form} from 'react-bootstrap';\n\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            name : '',\n        }\n    }\n\n    onLoginClick(e){\n        this.props.onLogin(this.state.name);\n        e.preventDefault();\n    }\n\n    onInputChange(e){\n        this.setState({\n            name:e.target.value\n        });\n    }\n\n    render(){\n        return (\n            <div style={{height:'-webkit-fill-available'}}>\n            <Card style={ {\n                    margin: 'auto',\n                    width: '400px',\n                    top: '25%',\n                    bottom: '0'\n                }}>\n                <Card.Header>\n                    Login\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={this.onLoginClick.bind(this)}>\n                        <Form.Group controlId=\"formNickName\">\n                            <Form.Label>Nick Name</Form.Label>\n                            <Form.Control \n                                type=\"text\" \n                                placeholder=\"Enter your given NickName\" \n                                onChange={this.onInputChange.bind(this)}/>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n                <Card.Footer>\n                    Don't have a login ? Contact Parthiv\n                </Card.Footer>\n            </Card>\n            </div>\n        );\n    }\n}\n\nexport default Login;","\nconst BASE_URL = 'http://localhost:8080/api';\n// const BASE_URL = '/api';\n\nconst constants = {\n    BASE_URL :'http://localhost:8080/api/',\n    LIVE_POLL_TIME : 5000,\n    POINTS_POLL_TIME : 60000,\n    MYTEAM_POLL_TIME : 60000,\n    urls: {\n        getMyTeam: BASE_URL + '/myTeam',\n        getPointsRemaining : BASE_URL + '/remaningPoints',\n        getRemainingPlayers : BASE_URL + '/getRemainingPlayersCount',\n        getLiveAuctionInfo : BASE_URL + '/liveAuctionInfo',\n        placeBid : BASE_URL +'/addBid',\n        markPlayerAsSold :BASE_URL +'/markAsSold',\n        bringNextPlayer :BASE_URL +'/bringNextPlayer',\n        getAllPlayersData :BASE_URL + '/allPlayers',\n        startAuction : BASE_URL +'/resetAuction',\n        toggleTimer : BASE_URL +'/toggleTimerEnabled',\n        pauseTimer : BASE_URL +'/pauseTimer',\n        startTimer: BASE_URL +'/startTimer',\n        changeTimerForSold : BASE_URL +'/changeTimerWaitForSold',\n        changeTImerForNextPlayer : BASE_URL +'/changeTimerWaitForNextPlayer',\n        evaluation : BASE_URL +'/eval'\n    },\n    privileges:{\n        INACTIVE_USER:1,\n        ACTIVE_USER:2,\n        CORDINATOR:3,\n        ADMIN:4\n    }\n}\n\n\nexport default constants;\n","import React, { useState } from 'react';\nimport {Navbar,Nav,Button} from 'react-bootstrap';\nimport Axios from 'axios';\nimport {   USER_KEY, getPrivilege } from '../../helpers/util';\nimport { toast } from 'react-toastify';\nimport './Navigation.css'\nimport constants from '../../helpers/Constants';\n\nconst ButtonWithWarning= (props)=> <Button \n        variant=\"outline-info\" style={{marginLeft:'8px'}}\n        onClick={()=>{window.confirm(props.warning) && props.handler()}}>\n            {props.buttonName}\n</Button>;\n        \n\nconst Navigation =()=> {\n    const userName = localStorage.getItem([USER_KEY]) || 'User';\n    const isAdmin = getPrivilege() >= constants.privileges.ADMIN;\n    const [isOpened,setIsOpened] = useState(false);\n    const [configValue,setConfigValue]=useState(null);\n\n    const logOut=()=>{\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    // const componentWillUnmount() {\n    //     localStorage.clear();\n    // }\n\n    const startAuction = ()=>{\n        Axios.post(constants.urls.startAuction).then(\n            ()=>toast.success('Auction started. Enjoy the auction!!')\n        )\n    }\n\n    const toggleTimer =()=>{\n        Axios.get(constants.urls.toggleTimer).then(\n            (res)=>toast.success(res.data)\n        )\n    }\n    \n    const changeTimerForSold = ()=>{\n        const payload = {timeWait : configValue *1000}\n        Axios.post(constants.urls.changeTimerForSold,payload).then(\n            (res)=>toast.success(res.data)\n        )\n    }\n\n    const changeTimerForNextPlayer= ()=>{\n        const payload = {timeWait:configValue*1000}\n        Axios.post(constants.urls.changeTImerForNextPlayer,payload).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    const testSpecialPlayer = ()=>{\n        const payload = {command : `specialPlayerId = ${configValue}`}\n        Axios.post(constants.urls.evaluation,payload).then(\n            res=>toast.success(res.data)\n        )\n    }\n\n\n    \n    const additionalOptions = <div>\n            <ButtonWithWarning\n                warning=\"You are about to restart the auction. Are you Sure?\"\n                handler={startAuction}\n                buttonName = {'Start Auction'}\n            />\n            <ButtonWithWarning\n                warning=\"You are about to toggle the timer. Are you Sure?\"\n                handler={toggleTimer}\n                buttonName = {'Enable / Disable Timer'}\n            />\n            <input onChange={(e)=>setConfigValue(parseInt(e.target.value))}></input>\n            <ButtonWithWarning\n                warning=\"You are Change Timer for marking player sold. Are you Sure?\"\n                handler={changeTimerForSold}\n                buttonName = {'Change Time to Sold'}\n            />\n            <ButtonWithWarning\n                warning=\"You are Change Timer for getiing next player. Are you Sure?\"\n                handler={changeTimerForNextPlayer}\n                buttonName = {'Change Time to Next player'}\n            />\n            <ButtonWithWarning\n                warning=\"You are about to get test. Are you Sure?\"\n                handler={testSpecialPlayer}\n                buttonName = {'Test'}\n            />\n    </div>\n\n    const originalNavBar = \n        <>\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n                {`Hi ${userName}`}\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n                {isAdmin  && <Nav.Link onClick={()=>setIsOpened(!isOpened)}>More Options</Nav.Link>}\n            </Nav>\n                <Button variant=\"outline-info\" onClick={logOut}>Log Out</Button>\n        </Navbar>\n        {isOpened && <Navbar  bg=\"dark\" variant=\"dark\">\n                {additionalOptions}\n        </Navbar>}\n        </>\n    \n\n    \n    return originalNavBar;\n}\n\nexport default Navigation;\n","import Navigation from './Navigation';\nexport default Navigation;","import React from 'react';\nimport { Table,Col } from 'react-bootstrap';\n\nconst DisplayAddedBids = (props)=>{\n\n    const bids = props.bids;\n\n    const getTableHeader=()=>{\n        return  <tr>\n                    <th>Bid By</th>\n                    <th>Bid Amt</th>\n                </tr>\n    }\n\n    const getTableRow=(bid)=>{\n           return <tr key={bid.bidBy + bid.bidAmt}>\n                    <td>{bid.bidBy}</td>\n                    <td>{bid.bidAmt}</td>\n                </tr>\n    }\n\n    if(bids && bids.length>0) {\n        return(<>\n            <Col sm={12}>\n                <h4>Previous Bids:</h4>\n                <Table striped={true} bordered={true} hover={true} size=\"sm\">\n                    <thead>\n                        {getTableHeader()}\n                    </thead>\n                    <tbody>\n                        {bids.map((bid)=>getTableRow(bid))}\n                    </tbody>\n                </Table>\n            </Col>\n        </>)\n    }\n    return (<div>You Can Start Bidding</div>);\n}\n\nexport default  DisplayAddedBids;","import React, { useState,useEffect } from 'react';\nimport constants from '../../helpers/Constants';\nimport { getPrivilege } from '../../helpers/util';\nimport { Col ,Button} from 'react-bootstrap';\n\n\nconst LiveAuctionDetails = (props)=>{\n    const currentPlayer = props.player\n\n    \n    const [bid,setBid] = useState(props.minBid)\n\n    useEffect(() => {\n        setBid(props.minBid)\n    }, [props.minBid,props.player])\n\n    const roundOff=(amt)=>{\n        const bidAmt = Math.ceil(parseInt(amt.target.value)/5)*5;\n        setBid(bidAmt);\n    }\n    const addPlayerSoldInfo = ()=>{\n        if(currentPlayer.soldTo){\n            return <>\n                    <Col sm={12}>\n                        {`Sold to : ${currentPlayer.soldTo}`}\n                    </Col>\n                    <Col sm={12}>\n                        {`Sold for : ${currentPlayer.soldAt} points`}\n                    </Col>\n                </>\n        }\n        return <></>\n    }\n\n    const addBidInput=()=>{\n        if(currentPlayer.soldTo){\n            return <></>\n        }\n        return <Col sm={12}>\n            <input style={{margin : '15px',marginLeft:'0px'}} type='number' step='5' \n                value={bid}\n                placeholder='Bid Amount'\n                onBlur={roundOff}\n                onChange={event=>setBid(event.target.value)}/>\n            <Button size='sm' onClick={()=>props.onBid(bid)}>\n                Bid\n            </Button>\n        </Col>\n    }\n\n    const addSoldButtonAndGetNextPlayerButton = ()=>{\n        const isPlayerSold = Boolean(currentPlayer.soldTo);\n        const isUserCordinatorOrAbove = getPrivilege() >= constants.privileges.CORDINATOR;\n        const bidsPresent = currentPlayer && currentPlayer.bids && currentPlayer.bids.length && currentPlayer.bids.length>0 ? true : false;\n        const soldButtonName = bidsPresent ? 'Mark as Sold' : 'Mark as Unsold';\n        \n        if(isUserCordinatorOrAbove){\n            if(isPlayerSold){\n                return <Col sm={12}>\n                    <Button \n                        size='sm' \n                        variant=\"info\" \n                        onClick={props.bringNextPlayerHandler}>\n                            Get Next Player\n                    </Button>\n                </Col>\n            }\n            else{\n                return <Col sm={12}>\n                    <Button \n                        size='sm' \n                        variant=\"danger\" \n                        onClick={props.markPlayerSoldHandler}>\n                            {soldButtonName}\n                    </Button>\n                </Col>\n            }\n        }\n        return <></>\n    }\n\n    return <>\n            <Col sm={12}>\n                {`PlayerId : ${currentPlayer.playerId}`}\n            </Col>\n            <Col sm={12}>\n                {`Player Name : ${currentPlayer.name}`}\n            </Col>\n            <Col sm={12}>\n                {`Team : ${currentPlayer.team}`}\n            </Col>\n            <Col sm={12}>\n                {`Grade : ${currentPlayer.grade}`}\n            </Col>\n            {/* <Col sm={12}>\n                {`Nationality : ${currentPlayer.nationality}`}\n            </Col> */}\n            <Col sm={12}> \n                {`Time Left : ${currentPlayer.timeLeft ? currentPlayer.timeLeft/1000-2: 'null'} Seconds`}\n            </Col>\n            {addPlayerSoldInfo()}\n            {addBidInput()}\n            {addSoldButtonAndGetNextPlayerButton()}\n        </>\n}\n\nexport default LiveAuctionDetails;","import LiveAuction from './LiveAuction';\nexport default LiveAuction;","import React, { Component } from 'react';\nimport Constants from '../../helpers/Constants';\nimport { Button, Row,Card} from 'react-bootstrap';\nimport Axios from 'axios';\nimport {  USER_KEY } from '../../helpers/util';\nimport _ from 'lodash';\nimport { toast } from 'react-toastify';\nimport constants from '../../helpers/Constants';\nimport DisplayAddedBids from './DisplayAddedBids';\nimport LiveAuctionDetails from './DisplayLiveAuctionDetails';\n\nclass LiveAuction extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentAuctionInfo : null,\n            bidAmt : 5\n        }\n    }\n\n    componentDidMount(){\n        this.getLiveAuctionInfo();\n        this.interval = setInterval(()=>{\n            this.getLiveAuctionInfo();\n        },Constants.LIVE_POLL_TIME)\n    }\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getLiveAuctionInfo(){\n        Axios.get(constants.urls.getLiveAuctionInfo).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.currentAuctionInfo)){\n                    const bidAmt = (res.data.bids && res.data.bids[0] && res.data.bids[0].bidAmt+5) || 5;\n                    this.setState({currentAuctionInfo:res.data,bidAmt})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n            }\n        )\n    }\n\n    roundOff(amt){\n        const bidAmt = Math.ceil(parseInt(amt.target.value)/5)*5;\n        this.setState({bidAmt});\n    }\n\n    handleBidInputChange(e){\n        this.setState({bidAmt:e.target.value});\n    }\n\n\n    bid(bidAmt){\n        if(bidAmt && bidAmt>0){\n            const userName = localStorage.getItem([USER_KEY]) || 'User';\n            const playerId =this.state.currentAuctionInfo.playerId;\n            this.doBidRequest(playerId,bidAmt,userName).then(\n                ()=>this.getLiveAuctionInfo()\n                ,(err)=>{\n                    if(err && err.response && err.response.data && err.response.data.message){\n                        toast.error(err.response.data.message);\n                      } \n                }\n            )\n        }\n    }\n\n    doBidRequest(playerId,bidAmt,bidBy){\n        return Axios.post(Constants.urls.placeBid,{playerId,bidAmt,bidBy})\n    }\n\n    markPlayerSoldHandler(){\n        this.markPlayerSoldRequest(this.state.currentAuctionInfo.playerId).then(\n            (res)=>{\n                if(res.data && res.data.message){\n                    toast.success(res.data.message)\n                }\n                this.getLiveAuctionInfo();\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    markPlayerSoldRequest(playerId){\n        return Axios.post(Constants.urls.markPlayerAsSold,{playerId});\n    }\n    \n    bringNextPlayerHandler(){\n        this.bringNextPlayerRequest().then(\n            ()=> this.getLiveAuctionInfo()\n            ,err=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n            }\n        )\n    }\n    bringNextPlayerRequest(){\n        return Axios.get(Constants.urls.bringNextPlayer);\n    }\n\n    onRefreshHandler(){\n        this.getLiveAuctionInfo();\n    }\n\n    render() {\n        const currentPlayer = this.state.currentAuctionInfo;\n        if(currentPlayer){\n            return(\n                <Card>\n                    <Card.Header>\n                        Current/ Last Player\n                        <Button \n                            variant=\"dark\" \n                            size='sm' \n                            style={{float:'right'}} \n                            onClick={this.onRefreshHandler.bind(this)}>\n                                Refresh\n                        </Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Row style={{margin:'0px'}}>\n             \n\n                            <LiveAuctionDetails\n                                player = {currentPlayer}\n                                minBid = {this.state.bidAmt}\n                                onBid = {(bidAmt)=>this.bid(bidAmt)}\n                                bringNextPlayerHandler = {this.bringNextPlayerHandler.bind(this)}\n                                markPlayerSoldHandler = {this.markPlayerSoldHandler.bind(this)}\n\n                                ></LiveAuctionDetails>\n                            <DisplayAddedBids bids={currentPlayer.bids}></DisplayAddedBids>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nexport default LiveAuction;\n","import PointsRemaining from './PointsRemaining';\nexport default PointsRemaining;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport Constants from '../../helpers/Constants';\nimport { Table, Card ,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass PointsRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            points : null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPointsRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPointsRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    remainingPointsRequest(){\n        Axios.get(Constants.urls.getPointsRemaining).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({points:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n            }\n        )\n    }\n\n\n    onRefreshHandler(){\n        this.remainingPointsRequest();\n    }\n\n    getTableHeader(){\n        return <tr>\n                    <th>Team Owner</th>\n                    <th>Points</th>\n                </tr>\n    }\n\n    getTableRow(user,value){\n        return <tr key={user}>\n                    <td >{user}</td>\n                    <td>{value}</td>\n                </tr>\n    }\n\n    render(){\n        const points =this.state.points;\n        if(points ){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Points Remaining\n                        <Button \n                            variant=\"dark\" \n                            size='sm' \n                            style={{float:'right'}} \n                            onClick={this.onRefreshHandler.bind(this)}>\n                                Refresh\n                        </Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    {this.getTableHeader()}\n                                </thead>\n                                <tbody>\n                                    {(Object.keys(points)).sort().map((user)=>this.getTableRow(user,points[user]))}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PointsRemaining;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\n// import { getHeaderObject } from '../../helpers/util';\nimport Constants from '../../helpers/Constants';\nimport { Table ,Card,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass YourTeam extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            team : null\n        }\n    }\n\n    componentDidMount(){\n        this.getYourTeam();\n        this.interval = setInterval(()=>{\n            this.getYourTeam();\n        },Constants.MYTEAM_POLL_TIME)\n    }\n\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getYourTeam(){\n        Axios.get(Constants.urls.getMyTeam).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.team)){\n                    this.setState({team:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.getYourTeam();\n    }\n\n\n    getTeamColour(team){\n        const obj ={\n            CSK : '#fcce06',\n            MI : '#004f91',\n            KKR : '#3a225d',\n            SRH : '#f7a721',\n            RCB : '#d5152c',\n            KXIP : '#ed1f27',\n            DC: '#2561ae',\n            RR :'#254aa5',\n        }\n        return obj[team];\n    }\n\n    getTeamTextColor(team){\n        const obj = {\n            CSK : '#f25c19',\n            MI : '#ffffff',\n            KKR : '#f3c433',\n            SRH : '#9a1c22',\n            RCB : '#000000',\n            KXIP : '#ffffff',\n            DC: '#d71921',\n            RR :'#ffffff'\n        }\n        return obj[team];\n    }\n\n\n    getTableHeaderRow(){\n        return <tr>\n                <th>Sr.</th>\n                <th>Player Name</th>\n                <th>Points</th>\n                <th>Team</th>\n            </tr>\n    }\n\n    getTableRow(player,index){\n        return <tr key={player.name}>\n                    <td>{index+1}</td>\n                    <td>{player.name}</td>\n                    <td>{player.soldAt}</td>\n                    <td style={{backgroundColor:`${this.getTeamColour(player.team)}`,color:`${this.getTeamTextColor(player.team)}`}}>\n                        {player.team}\n                    </td>\n                </tr>\n    }\n\n    render(){\n        const team = this.state.team;\n        if(team){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        My Team\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>\n                            Refresh\n                        </Button>\n                    </Card.Header>\n                    <Card.Body>\n                    <Table bordered='true' hover='true' size=\"sm\">\n                            <thead>\n                                {this.getTableHeaderRow()}\n                            </thead>\n                            <tbody>\n                                {\n                                    team.map((player,index)=>this.getTableRow(player,index))\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n                \n            )\n        }\n        return null;\n    }\n}\n\nexport default YourTeam;","import React, { useState ,useEffect}  from 'react';\nimport Axios from'axios';\nimport {clone, cloneDeep} from 'lodash' ;\nimport Constants from '../../helpers/Constants';\nimport { Button} from 'react-bootstrap';\nimport ReactDataGrid from 'react-data-grid';\nimport './Grid.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { toast } from 'react-toastify';\n\n\nconst FilterToolBar = (props)=>{\n    return(\n        <div>\n            <Button onClick={()=>props.onToggleFilter()} style={{float:'right'}}>\n                Filter\n            </Button>\n        </div>\n    )\n}\n\nconst AllPlayers = ()=>{\n\n    const [players,setPlayers]= useState([]);\n    const [filteredPlayers,setFilteredPlayers]= useState([]);\n    const [filter,setFilter]=useState({});\n\n    const columns = [\n        {key:'srNo',name :'Sr. No'},\n        { key: 'playerId', name: 'Player ID', sortable:true,filterable : true},\n        { key: 'name', name: 'Player Name' ,sortable:true,filterable : true},\n        { key:'grade',name : 'Grade',sortable:true,filterable : true},\n        { key: 'team', name: 'Team' ,sortable:true,filterable :true},\n        { key: 'soldTo', name: 'Sold To' ,sortable:true,filterable : true} ,\n        { key: 'soldAt', name: 'Price' ,sortable:true} ,\n    ]\n\n    const getAllPlayerData=()=>{\n        Axios.get(Constants.urls.getAllPlayersData).then(\n            (res)=> {\n                setPlayers(res.data)\n                setFilteredPlayers(res.data);\n            },\n            (err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n            }\n        )\n    }\n\n    useEffect(() => {\n        getAllPlayerData()\n    }, [])\n\n\n    const filterRows=()=> {\n        var filteredRows = clone(players);\n        Object.keys(filter).forEach(filterKey=>{\n            const term = filter[filterKey].filterTerm;\n            filteredRows = filteredRows.filter((value)=>{\n                return value[filterKey] && (value[filterKey].toString().toLowerCase()).indexOf(term.toLowerCase())>-1\n            });\n        })\n        setFilteredPlayers(filteredRows);\n    }\n\n    const asExcell=()=>{\n        try{\n            const filteredPlayersCopy = cloneDeep(filteredPlayers);\n            var CsvString = \"Player Id,Name,grade,Team,Sold At,Sold To,Bids\\r\\n\";\n            filteredPlayersCopy.forEach(function(RowItem) {\n                for(var key in RowItem){\n                    CsvString += JSON.stringify(RowItem[key]).replace(/\\,/g,'') + ',';\n                }\n                CsvString += \"\\r\\n\";\n            });\n            CsvString = \"data:application/csv,\" + encodeURIComponent(CsvString);\n            var x = document.createElement(\"A\");\n            x.setAttribute(\"href\", CsvString );\n            x.setAttribute(\"download\",\"WCauction1.csv\");\n            document.body.appendChild(x);\n            x.click();\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    const asPdf = ()=>{\n        \n        try{\n            const doc = new jsPDF();\n            doc.autoTable({\n                head: [['ID','Player Name','grade','Team','Sold At','Sold To','\\r\\n']],\n                body:filteredPlayers.map(player=>\n                    [\n                        player.playerId,\n                        player.name,\n                        player.grade,\n                        player.team,\n                        player.soldAt,\n                        player.soldTo\n                    ]\n                )\n            });\n            doc.save('summary.pdf');\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    const sortRows = ( sortColumn, sortDirection) =>  {\n        if(sortDirection === \"NONE\"){ \n            setFilteredPlayers(filteredPlayers);\n        }\n        const comparer = (a, b) => { \n            if (sortDirection === \"ASC\") {\n                return a[sortColumn] > b[sortColumn] ? 1 : -1;\n            } else if (sortDirection === \"DESC\") {\n                return a[sortColumn] < b[sortColumn] ? 1 : -1;\n            }\n        };\n        const xyz = cloneDeep(filteredPlayers.sort(comparer))\n        setFilteredPlayers(xyz)\n    };\n        \n    const onFilterChange = (newFilter) => {\n        const oldFilter = filter;\n        const key = newFilter.column.key;\n        if (newFilter.filterTerm) {\n        oldFilter[key] = newFilter;\n        } else {\n        delete oldFilter[key];\n        }\n        setFilter(filter);\n        filterRows();\n    };\n\n    const getConfigButtons = ()=>{\n        return <>\n        <h2 style={{display:'inline-block'}}>\n            All PLayers Data \n        </h2>\n        {/* {console.log(players,filter)} */}\n        &nbsp;\n        <Button variant={'info'} style={{float:'right',marginLeft:'4px'}} onClick={asPdf}>\n            Download PDF\n        </Button>\n        &nbsp;\n        <Button variant={'info'} style={{float:'right',marginLeft:'4px'}} onClick={asExcell}>\n            Download Excell\n        </Button>\n        &nbsp;\n        <Button variant={'info'} style={{float:'right',marginLeft:'4px'}} onClick={getAllPlayerData}>\n            Refresh Data\n        </Button>\n        &nbsp;\n        </>\n    }\n\n    if(players&& players.length === 0){\n        return <>{getConfigButtons()}</>\n    }\n    \n    return <div>\n        {getConfigButtons()}\n        <ReactDataGrid\n            columns={columns}\n            rowGetter={i => ({\n                                srNo:i+1,\n                                ...filteredPlayers[i]\n                            })}\n            rowsCount={filteredPlayers.length}\n            minHeight={500}\n            toolbar={<FilterToolBar/>}\n            onGridSort={(sortColumn, sortDirection) => sortRows(sortColumn, sortDirection)}\n            onAddFilter={newFilter => onFilterChange(newFilter)}\n            onClearFilters={() => setFilter({})}\n        />\n    </div>\n}\n\n\nexport default AllPlayers;","import AllPlayerDetails from './AllPlayerDetails';\nexport default AllPlayerDetails;","import PlayersRemaining from './PlayersRemaining';\nexport default  PlayersRemaining;","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport Constants from '../../helpers/Constants';\nimport { Table, Card, Button } from 'react-bootstrap';\n\n\nclass PlayerRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            data:null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPlayerRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPlayerRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n\n    remainingPlayerRequest(){\n        Axios.get(Constants.urls.getRemainingPlayers).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.data)){\n                    this.setState({data:res.data})\n                }\n            })\n    }\n\n    onRefreshHandler(){\n        this.remainingPlayerRequest();\n    }\n\n\n    getTableHeaderRow(){\n        return  <tr>\n                    <th>Type</th>\n                    <th>Number of Players</th>\n                </tr>\n    }\n\n    getTableRow(type,count){\n        return  <tr key={type }>\n                    <td >{type.replace('_',' ')}</td>\n                    <td>{count}</td>\n                </tr>\n    }\n\n    render(){\n        const data = this.state.data;\n        if(data){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Players Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    {this.getTableHeaderRow()}\n                                </thead>\n                                <tbody>\n                                    {Object.keys(data).map((type)=>this.getTableRow(type,data[type]))}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PlayerRemaining;\n","import React, { Component } from 'react';\nimport Navigation from '../components/NavigationsBar';\nimport LiveAuction from '../components/LiveAuction';\nimport { Row,Col } from 'react-bootstrap';\nimport PointsRemaining from '../components/PointsRemaining';\nimport YourTeam from '../components/YourTeam/YourTeam';\nimport AllPlayerDetails from '../components/AllPlayerDetails';\nimport PlayersRemaining from '../components/PlayersRemaining';\n\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n          <Navigation/>\n          <br/>\n          <br/>\n          <Row style={{margin:'0px'}}>\n            <Col sm={12} lg={3} >\n              <LiveAuction/>\n              </Col>\n            <Col sm={12} lg={3} >\n              <PlayersRemaining/>\n              </Col>\n            <Col  sm={12} lg={3}>\n              <PointsRemaining/>\n            </Col>\n            <Col sm={12} lg={3}>\n              <YourTeam/>\n            </Col>\n            <Col sm={12}>\n              <br/>\n            </Col>\n            <Col sm={12}>\n              <AllPlayerDetails/>\n            </Col>\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import axios from 'axios';\nimport { getJwtToken } from './util';\n\nexport function setUpInterceptor(){\n    axios.interceptors.request.use(addRequestHeader)\n}\n\nfunction addRequestHeader(request){\n    request.headers['Authorization'] = getJwtToken();\n    \n    return request;\n}","import React, { Component } from 'react';\nimport { checkForJwt, saveJwt } from './helpers/util';\nimport Login from './pages/Login';\nimport HomePage from './pages/HomePage';\nimport axios from 'axios';\nimport constants from './helpers/Constants';\nimport {setUpInterceptor} from './helpers/interceptors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    setUpInterceptor();\n  }\n  \n\n  login(nickName){\n      axios.post(constants.BASE_URL+'/login',{nickName}).then((res)=>{\n        saveJwt(res.data.token)\n        this.forceUpdate();\n      },(err)=>{\n          if(err && err.response && err.response.data && err.response.data.message){\n            toast.error(err.response.data.message);\n          }\n      })\n    \n  }\n\n  render() {\n    const isAuthorized = checkForJwt();\n    return (\n      <div>{isAuthorized?<HomePage/>:<Login onLogin={this.login.bind(this)}/>}<ToastContainer /></div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}