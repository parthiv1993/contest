{"version":3,"sources":["util.js","Login.js","Constants.js","Navigation.js","LiveAuction.js","PointsRemaining.js","YourTeam.js","AllPlayerDetails.js","PlayersRemaining.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["USER_KEY","TOKEN_KEY","USER_PRIVILAGE","getJwtToken","localStorage","getItem","getPrivilage","e","console","error","getHeaderObject","headers","Authorization","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","onLogin","preventDefault","setState","target","value","react_default","a","createElement","style","height","Card","margin","width","top","bottom","Header","Body","Form","onSubmit","onLoginClick","bind","Group","controlId","Label","Control","type","placeholder","onChange","onInputChange","Button","variant","Footer","React","Component","Constants","ButtonWithWarning","onClick","confirm","warning","handler","buttonName","Navigation","isExtendedMenuOption","clear","window","location","reload","startAuctionRequest","then","res","toast","success","err","Axios","get","data","post","timeWait","inputText","keys","map","key","info","JSON","stringify","replace","autoClose","className","position","POSITION","TOP_CENTER","payload","command","concat","_this2","userName","privilage","Navbar","bg","Brand","href","Nav","logOut","Navigation_ButtonWithWarning","startAuctionHandler","timerHandler","parseInt","changeTimerWaitForSold","changeTimerWaitForNextPlayer","getStatus","tryTest","LiveAuction","currentAuctionInfo","bidAmt","getLiveAuctionInfo","interval","setInterval","clearInterval","_this3","_","isEqual","lastBid","bids","basePrize","Math","max","response","message","amt","ceil","_this4","playerId","doBidRequest","bidBy","_this5","markPlayerSoldRequest","_this6","bringNextPlayerRequest","currentPlayer","soldButtonName","length","size","float","onRefreshHandler","Row","Col","sm","team","timeLeft","soldTo","soldAt","marginLeft","step","onBlur","roundOff","handleBidInputChange","bid","markPlayerSoldHandler","bringNextPlayerHandler","DisplayBids","Table","striped","bordered","hover","index","PointsRemaining","points","remainingPointsRequest","as","YourTeam","getYourTeam","CSK","MI","KKR","SRH","RCB","KXIP","DC","RR","player","backgroundColor","getTeamColour","color","getTeamTextColor","Toolbar","onToggleFilter","abc","AllPlayerDetails","refreshDataHandler","getAllPlayerData","sortRows","initialRows","sortColumn","sortDirection","sort","b","handleFilterChange","filters","oldFilter","column","filterTerm","players","dPlayers","sortedPlayers","filteredPlayers","columns","sortable","filterable","doc","jsPDF","getRows","autoTable","head","body","save","log","CsvString","forEach","RowItem","encodeURIComponent","x","document","setAttribute","appendChild","click","rows","filteredRows","filterKey","term","filter","toString","toLowerCase","indexOf","display","download","downloadAsExcell","react_data_grid_default","rowGetter","i","objectSpread","srNo","rowsCount","minHeight","toolbar","AllPlayerDetails_Toolbar","onGridSort","setdPlayers","onAddFilter","setFilters","onClearFilters","PlayerRemaining","count","remainingPlayerRequest","HomePage","src_Navigation","lg","src_LiveAuction","PlayersRemaining","src_PointsRemaining","src_YourTeam","src_AllPlayerDetails","App","nickName","axios","constants","token","debugged","jwt","decode","setItem","user","saveJwt","forceUpdate","isAuthorized","src_HomePage","src_Login","login","lib","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aab470db.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport const USER_KEY = 'IPL2021User';\nexport const TOKEN_KEY = 'IPL2021Token';\nexport const USER_PRIVILAGE = 'IPL2021Privilage';\n\n\nexport function getJwtToken(){\n    return localStorage.getItem([TOKEN_KEY]);\n}\n\nexport function checkForJwt(){\n    if(getJwtToken()){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport function saveJwt(token){\n    try {\n        const debugged = jwt.decode(token);\n        console.log(debugged)\n        if(debugged){\n            localStorage.setItem([TOKEN_KEY],token);\n            localStorage.setItem([USER_KEY],debugged.user);\n            localStorage.setItem([USER_PRIVILAGE],debugged.privilage);\n        }\n        \n    }\n    catch(e){\n        console.error(e);\n    }\n    \n}\n\n\nexport function getPrivilage(){\n    try{\n        return localStorage.getItem([USER_PRIVILAGE])\n    }\n    catch(e){\n        console.error(e);\n        return 0;\n    }\n}\n\nexport function getHeaderObject(){\n    const token = getJwtToken();\n\n    return { 'headers': { 'Authorization': token } }\n}","import React from 'react';\nimport { Button,Card, Form} from 'react-bootstrap';\n\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            name : ''\n        }\n    }\n\n    onLoginClick(e){\n        this.props.onLogin(this.state.name);\n        e.preventDefault();\n    }\n\n    onInputChange(e){\n        this.setState({\n            name:e.target.value\n        });\n    }\n\n    render(){\n        return (\n            // <div class=\"container d-flex h-100\">\n            // <div class=\"row justify-content-center align-self-center\">\n            <div style={{height:'-webkit-fill-available'}}>\n            <Card style={ {\n                    margin: 'auto',\n                    width: '400px',\n                    top: '25%',\n                    bottom: '0'\n                }}>\n                <Card.Header>\n                    Login\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={this.onLoginClick.bind(this)}>\n                        <Form.Group controlId=\"formNickName\">\n                            <Form.Label>Nick Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter your given NickName\" onChange={this.onInputChange.bind(this)}/>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n                <Card.Footer>\n                    Don't have a login ? Contact Parthiv\n                </Card.Footer>\n            </Card>\n            </div>\n            // </div>\n            // <div style={{margin:'auto'}}>\n            //     <form>\n            //         <label>\n            //             NickName :\n            //         </label>\n            //         <input value={this.state.name} onChange={this.onInputChange.bind(this)}/>\n            //         <button onClick={this.onLoginClick.bind(this)}>Login</button>\n            //     </form>\n            // </div>\n        );\n    }\n}\n\nexport default Login;","export default {\n    // BASE_URL : 'http://localhost:8080/api',\n    // BASE_URL : 'http://icc-wc2019.1d35.starter-us-east-1.openshiftapps.com/',\n    BASE_URL : '/api',\n    LIVE_POLL_TIME : 5000,\n    POINTS_POLL_TIME : 60000,\n    MYTEAM_POLL_TIME : 60000\n}\n","import React, { Component } from 'react';\nimport {Navbar,Nav,Form,FormControl,Button, Dropdown} from 'react-bootstrap';\nimport Axios from 'axios';\nimport Constants from './Constants';\nimport { getJwtToken, getHeaderObject, USER_KEY, getPrivilage } from './util';\nimport { toast } from 'react-toastify';\nimport './navigation.css'\n\nconst ButtonWithWarning= (props)=> <Button variant=\"outline-info\" onClick={()=>{\n    //eslint-disable-next-line\n    if(confirm(props.warning)){\n        props.handler();\n    }\n}   \n}>{props.buttonName}</Button>\n\nclass Navigation extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isExtendedMenuOption :false\n        }\n    }\n\n    logOut(){\n        // const userName = localStorage.getItem([USER_KEY]) || 'User';\n  \n            localStorage.clear();\n            window.location.reload();\n    }\n\n    componentWillUnmount() {\n        localStorage.clear();\n    }\n\n    startAuctionHandler(){\n        this.startAuctionRequest().then(\n            (res)=>{\n                toast.success('Auction started. Enjoy the auction!!');\n            },\n            (err)=>{\n\n            }\n        )\n    }\n\n    startAuctionRequest(){\n        return Axios.get(Constants.BASE_URL +'/resetAuction',getHeaderObject());\n    }\n\n    timerHandler(){\n        Axios.get(Constants.BASE_URL +'/toggleTimerEnabled',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    pauseTimerNow(){\n        Axios.get(Constants.BASE_URL +'/pauseTimer',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    startTimerNow(){\n        Axios.get(Constants.BASE_URL +'/startTimer',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    changeTimerWaitForSold(){\n        Axios.post(Constants.BASE_URL +'/changeTimerWaitForSold',{timeWait:this.inputText*1000},getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    changeTimerWaitForNextPlayer(){\n        Axios.post(Constants.BASE_URL +'/changeTimerWaitForNextPlayer',{timeWait:this.inputText*1000},getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    getStatus(){\n        Axios.get(Constants.BASE_URL +'/getStatus',getHeaderObject()).then(\n            (res)=>{\n                if(res.data){\n                    try{\n                        Object.keys(res.data).map(\n                            key=>\n                                {toast.info(\n                                    [key]+' : ' +(JSON.stringify(res.data[key],null,4).replace(/\\,/g,'___').replace(/\\:/g,'=')\n                                ),{\n                                    autoClose:false,\n                                    className:'statusNotification',\n                                    position : toast.POSITION.TOP_CENTER\n                                }\n                                )\n                            }\n                        )\n                    }\n                    catch(e){\n\n                    }\n                }\n                toast.info(res.data,{\n                    autoClose: false\n                  });\n            },(err)=>{\n\n            }\n        )\n    }\n\n    tryTest(){\n        const payload = {\n            command : `specialPlayerId = ${this.inputText}`\n        };\n        Axios.post(Constants.BASE_URL +'/eval',payload,getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n\n    render() {\n        const userName = localStorage.getItem([USER_KEY]) || 'User';\n        const privilage = getPrivilage()\n\n        const originalNavBar = <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">{`Hi ${userName}`}</Navbar.Brand>\n                <Nav className=\"mr-auto\"></Nav>\n                <Button variant=\"outline-info\" onClick={this.logOut.bind(this)}>Log Out</Button>\n            </Navbar>;\n\n        const additionalOptions = <Navbar bg=\"dark\" variant=\"dark\">\n                {\n                    ( privilage>=3) &&\n                    <ButtonWithWarning\n                            warning=\"You are about to restart the auction. Are you Sure?\"\n                            handler={this.startAuctionHandler.bind(this)}\n                            buttonName = {'Start Auction'}\n                    />\n                }\n                &nbsp;\n                {\n                    ( privilage>=3) &&\n                    <ButtonWithWarning\n                            warning=\"You are about to toggle the timer. Are you Sure?\"\n                            handler={this.timerHandler.bind(this)}\n                            buttonName = {'Enable / Disable Timer'}\n                    />\n                }\n                &nbsp;\n                {\n                    ( privilage>3) &&\n                    <input onChange={(e)=>{this.inputText = parseInt(e.target.value)}}></input>\n                }\n                &nbsp;\n                {\n                     ( privilage>3) &&\n                     <ButtonWithWarning\n                            warning=\"You are Change Timer for marking player sold. Are you Sure?\"\n                            handler={this.changeTimerWaitForSold.bind(this)}\n                            buttonName = {'Change Time to Sold'}\n                    />\n                }\n                &nbsp;\n                {\n                     ( privilage>3) &&\n                     <ButtonWithWarning\n                            warning=\"You are Change Timer for getiing next player. Are you Sure?\"\n                            handler={this.changeTimerWaitForNextPlayer.bind(this)}\n                            buttonName = {'Change Time to Next player'}\n                    />\n                }\n                &nbsp;\n                {\n                     ( privilage>3) &&\n                     <ButtonWithWarning\n                            warning=\"You are about to get status. Are you Sure?\"\n                            handler={this.getStatus.bind(this)}\n                            buttonName = {'Get Status'}\n                    />\n                }\n                &nbsp;\n                {\n                     ( privilage>3) &&\n                     <Button variant=\"outline-info\" onClick={()=>{\n                        //eslint-disable-next-line\n                        if(!confirm(\"You are about to get test. Are you Sure?\")){\n                            this.tryTest();\n                        }\n                    }   \n                    }>{'Test'}</Button>\n                    //  <ButtonWithWarning\n                    //         warning=\"You are about to get test. Are you Sure?\"\n                    //         handler={this.tryTest.bind(this)}\n                    //         buttonName = {'Test'}\n                    // />\n                }\n            </Navbar>;\n        return(\n            [\n                originalNavBar,\n                additionalOptions,\n            ]     \n        )\n    }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Constants from './Constants';\nimport { Button, Row, Col, Table ,Card} from 'react-bootstrap';\nimport Axios from 'axios';\nimport { getHeaderObject, getPrivilage, USER_KEY } from './util';\nimport _ from 'lodash';\nimport { toast } from 'react-toastify';\n\nclass LiveAuction extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentAuctionInfo : null,\n            bidAmt : 5\n        }\n    }\n\n    componentDidMount(){\n        this.getLiveAuctionInfo();\n        this.interval = setInterval(()=>{\n            this.getLiveAuctionInfo();\n        },Constants.LIVE_POLL_TIME)\n    }\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getLiveAuctionInfo(){\n        Axios.get(Constants.BASE_URL + '/liveAuctionInfo',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.currentAuctionInfo)){\n                    const lastBid = (res.data.bids && res.data.bids[0] && res.data.bids[0].bidAmt+5) || 5;\n                    const basePrize = res.data.basePrize;\n                    const bidAmt = Math.max(basePrize,lastBid);\n                    this.setState({currentAuctionInfo:res.data,bidAmt})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err); \n            }\n        )\n    }\n\n    // startAuction(e){\n    //     e.preventDefault();\n    // }\n\n    roundOff(amt){\n        const bidAmt = Math.ceil(parseInt(amt.target.value)/5)*5;\n        this.setState({bidAmt});\n    }\n\n    handleBidInputChange(e){\n        this.setState({bidAmt:e.target.value});\n    }\n\n\n    bid(){\n        if(this.state.bidAmt && this.state.bidAmt>0){\n            const userName = localStorage.getItem([USER_KEY]) || 'User';\n            const playerId =this.state.currentAuctionInfo.playerId;\n            this.doBidRequest(playerId,this.state.bidAmt,userName).then(\n                (res)=>{\n                    // toast.success('Bid Successfully Placed');\n                    this.getLiveAuctionInfo()\n                },(err)=>{\n                    if(err && err.response && err.response.data && err.response.data.message){\n                        toast.error(err.response.data.message);\n                      }\n                    console.error(err); \n                }\n            )\n        }\n    }\n\n    doBidRequest(playerId,bidAmt,bidBy){\n        return Axios.post(Constants.BASE_URL +'/addBid',{playerId,bidAmt,bidBy},getHeaderObject())\n    }\n\n    markPlayerSoldHandler(){\n        this.markPlayerSoldRequest(this.state.currentAuctionInfo.playerId).then(\n            (res)=>{\n                if(res.data && res.data.message){\n                    toast.success(res.data.message)\n                }\n                this.getLiveAuctionInfo();\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    markPlayerSoldRequest(playerId){\n        return Axios.post(Constants.BASE_URL +'/markAsSold',{playerId},getHeaderObject());\n    }\n    \n    bringNextPlayerHandler(){\n        this.bringNextPlayerRequest().then(\n            res=>{\n                this.getLiveAuctionInfo();\n            },err=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.err(err);\n            }\n        )\n    }\n    bringNextPlayerRequest(){\n        return Axios.get(Constants.BASE_URL +'/bringNextPlayer',getHeaderObject());\n    }\n\n    onRefreshHandler(){\n        this.getLiveAuctionInfo();\n    }\n\n    render() {\n        const userName = localStorage.getItem([USER_KEY]) || 'User';\n        const privilage = getPrivilage()\n        const currentPlayer = this.state.currentAuctionInfo;\n        const bidsPresent = currentPlayer && currentPlayer.bids && currentPlayer.bids.length && currentPlayer.bids.length>0 ? true : false;\n        const soldButtonName = bidsPresent ? 'Mark as Sold' : 'Mark as Unsold';\n        if(currentPlayer){\n            return(\n                <Card>\n                    <Card.Header>\n                        Current/ Last Player\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Row style={{margin:'0px'}}>\n                            <Col sm={12}>\n                                {`PlayerId : ${currentPlayer.playerId}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Player Name : ${currentPlayer.name}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Team : ${currentPlayer.team}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Base Prize : ${currentPlayer.basePrize}`}\n                            </Col>\n                            {/* <Col sm={12}>\n                                {`Grade : ${currentPlayer.grade}`}\n                            </Col> */}\n                            {/* <Col sm={12}>\n                                {`Nationality : ${currentPlayer.nationality}`}\n                            </Col> */}\n                            <Col sm={12}> \n                                {`Time Left : ${currentPlayer.timeLeft ? currentPlayer.timeLeft/1000-3: 'null'} Seconds`}\n                            </Col>\n                            {\n                                currentPlayer.soldTo &&\n                                    <span>\n                                        <Col sm={12}>\n                                            {`Sold to : ${currentPlayer.soldTo}`}\n                                        </Col>\n                                        <Col sm={12}>\n                                            {`Sold for : ${currentPlayer.soldAt} points`}\n                                        </Col>\n                                        \n                                    </span>\n                            }\n                            {!currentPlayer.soldTo &&\n                                <Col sm={12}>\n                                    <input style={{margin : '15px',marginLeft:'0px'}} type='number' step='5' \n                                        value={this.state.bidAmt }\n                                        placeholder='Bid Amount'\n                                        onBlur={this.roundOff.bind(this)}\n                                        onChange={this.handleBidInputChange.bind(this)}/>\n                                    {userName != 'readOnly' && <Button size='sm' onClick={this.bid.bind(this)}>Bid</Button>}\n                                </Col>\n                            }\n                            {!currentPlayer.soldTo && (privilage>=3) && \n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"danger\" \n                                            onClick={this.markPlayerSoldHandler.bind(this)}>{soldButtonName}\n                                        </Button>\n                                    </Col>\n                            }\n                            \n                            {\n                                currentPlayer.soldTo && (privilage>=3) && \n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"info\" \n                                            onClick={this.bringNextPlayerHandler.bind(this)}>Get Next Player\n                                        </Button>\n                                    </Col>\n                            }\n                            <Col sm={12}>\n                                {DisplayBids(currentPlayer.bids)}\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nconst DisplayBids=(bids)=>{\n    if(bids && bids.length>0) { \n        return(<div>\n            <h4>Previous Bids:</h4>\n            <Table striped={true} bordered={true} hover={true} size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>\n                            Bid By\n                        </th>\n                        <th>\n                            Bid Amt\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {bids.map((bid,index)=><tr key={index}>\n                    <td>\n                        {bid.bidBy}\n                    </td>\n                    <td>\n                        {bid.bidAmt}\n                    </td>\n                </tr>)}\n                </tbody>\n            </Table>\n        </div>)\n    }\n    return (<div>You Can Start Bidding</div>);\n}\n\nexport default LiveAuction;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject ,USER_KEY} from './util';\nimport Constants from './Constants';\nimport { Table, Card ,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass PointsRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            points : null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPointsRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPointsRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    remainingPointsRequest(){\n        Axios.get(Constants.BASE_URL + '/remaningPoints',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({points:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err); \n            }\n        )\n    }\n\n\n    onRefreshHandler(){\n        this.remainingPointsRequest();\n    }\n\n    render(){\n        const points =this.state.points;\n        const user = localStorage.getItem([USER_KEY]);\n        if(points ){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Points Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Team Owner\n                                        </th>\n                                        <th>\n                                            Points\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(points).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key}\n                                            </td>\n                                            <td>\n                                                {points[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PointsRemaining;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass YourTeam extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            team : null\n        }\n    }\n\n    componentDidMount(){\n        this.getYourTeam();\n        this.interval = setInterval(()=>{\n            this.getYourTeam();\n        },Constants.MYTEAM_POLL_TIME)\n    }\n\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getYourTeam(){\n        Axios.get(Constants.BASE_URL + '/myTeam',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.team)){\n                    this.setState({team:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.getYourTeam();\n    }\n\n\n    getTeamColour(team){\n        const obj ={\n            CSK : '#fcce06',\n            MI : '#004f91',\n            KKR : '#3a225d',\n            SRH : '#f7a721',\n            RCB : '#d5152c',\n            KXIP : '#ed1f27',\n            DC: '#2561ae',\n            RR :'#254aa5',\n        }\n        return obj[team];\n    }\n\n    getTeamTextColor(team){\n        const obj = {\n            CSK : '#f25c19',\n            MI : '#ffffff',\n            KKR : '#f3c433',\n            SRH : '#9a1c22',\n            RCB : '#000000',\n            KXIP : '#ffffff',\n            DC: '#d71921',\n            RR :'#ffffff'\n        }\n        return obj[team];\n    }\n\n    render(){\n        const team = this.state.team;\n        if(team){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        My Team\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        {/* <div className='legend'>\n                            <ul style={ {listStyle: 'none' }}>\n                                <li style={{ float: 'left',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '24px', height: '24px', margin: '2px',backgroundColor:'cornflowerblue' }}>\n                                     </span>\n                                     <span>Indian</span>\n                                </li>\n                                <li style={{ float: 'right',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '24px', height: '24px', margin: '2px',backgroundColor:'palevioletred' }}>\n                                     </span>\n                                     <span>Overseas</span>\n                                </li>\n                            </ul>\n                        </div> */}\n                    <Table bordered='true' hover='true' size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Sr.\n                                    </th>\n                                    <th>\n                                        Player Name\n                                    </th>\n                                    <th>\n                                        Points\n                                    </th>\n                                    <th>\n                                        Team\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    team.map(\n                                        (player,index)=>\n                                            <tr key={index}>\n                                                <td>\n                                                    {index+1}\n                                                </td>\n                                                <td>\n                                                    {player.name}\n                                                </td>\n                                                <td>\n                                                    {player.soldAt}\n                                                </td>\n                                                <td style={{backgroundColor:`${this.getTeamColour(player.team)}`,color:`${this.getTeamTextColor(player.team)}`}}>\n                                                    {player.team}\n                                                </td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n                \n            )\n        }\n        return null;\n    }\n}\n\nexport default YourTeam;","import React, { useState }  from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card, Button} from 'react-bootstrap';\nimport ReactDataGrid from 'react-data-grid';\n// import { Toolbar, Data } from \"react-data-grid-addons\";\nimport './Grid.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { toast } from 'react-toastify';\n\n// const selectors = Data.Selectors;\n\nclass Toolbar extends React.Component{\n    render(){\n        return(<div><Button onClick={()=>this.props.onToggleFilter(this.abc)} style={{float:'right'}}>Filter</Button></div>)\n    }\n}\n\nclass AllPlayerDetails extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            players : [],\n            dPlayers : [],\n            sortedPlayers : [],\n            filteredPlayers : [],\n            filters : {}\n        }\n\n        this.columns = [\n            {key:'srNo',name :'Sr. No'},\n            { key: 'playerId', name: 'Player ID', sortable:true,filterable : true},\n            { key: 'name', name: 'Player Name' ,sortable:true,filterable : true},\n            { key: 'team', name: 'Team' ,sortable:true,filterable :true},\n            { key: 'soldTo', name: 'Sold To' ,sortable:true,filterable : true} ,\n            { key: 'soldAt', name: 'Price' ,sortable:true} ,\n            {key:'basePrize',name : 'BasePrize'}\n        ]\n    }\n\n    componentDidMount(){\n        this.getAllPlayerData();\n    }\n    \n    getAllPlayerData(){\n        Axios.get(Constants.BASE_URL + '/allPlayers',getHeaderObject()).then(\n            (res)=>{\n                this.setState({players:res.data,dPlayers:res.data})\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    refreshDataHandler= ()=>{\n        this.getAllPlayerData();\n    }\n    \n    download (){\n        try{\n            const doc = new jsPDF();\n            const filteredPlayers = this.getRows(this.state.dPlayers, this.state.filters);\n            doc.autoTable({\n                head: [['ID','Player Name','Team','Sold At','Sold To','basePrize','\\r\\n']],\n                body:filteredPlayers.map(player=>\n                    [\n                        player.playerId,\n                        player.name,\n                        player.team,\n                        player.soldAt,\n                        player.soldTo,\n                        player.basePrize\n                    ]\n                )\n            });\n            doc.save('summary.pdf');\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    downloadAsExcell(){\n        try{\n            const filteredPlayers = this.getRows(this.state.dPlayers, this.state.filters);\n            var CsvString = \"Player Id,Name,Team,Sold At,Sold To,basePrize,Bids\\r\\n\";\n            filteredPlayers.forEach(function(RowItem) {\n                for(var key in RowItem){\n                    CsvString += JSON.stringify(RowItem[key]).replace(/\\,/g,'') + ',';\n                }\n                CsvString += \"\\r\\n\";\n            });\n            CsvString = \"data:application/csv,\" + encodeURIComponent(CsvString);\n            var x = document.createElement(\"A\");\n            x.setAttribute(\"href\", CsvString );\n            x.setAttribute(\"download\",\"WCauction1.csv\");\n            document.body.appendChild(x);\n            x.click();\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    setdPlayers(dPlayers){\n        this.setState({dPlayers});\n    }\n\n    getRows(rows, filters) {\n        var filteredRows = rows;\n        Object.keys(filters).map(filterKey=>{\n            const term = filters[filterKey].filterTerm;\n            filteredRows = filteredRows.filter((value)=>{\n                return value[filterKey] && (value[filterKey].toString().toLowerCase()).indexOf(term.toLowerCase())>-1\n            });\n        })\n        return filteredRows;\n    }\n\n    sortRows = (initialRows, sortColumn, sortDirection) =>  {\n        const comparer = (a, b) => { \n            if (sortDirection === \"ASC\") {\n                return a[sortColumn] > b[sortColumn] ? 1 : -1;\n            } else if (sortDirection === \"DESC\") {\n                return a[sortColumn] < b[sortColumn] ? 1 : -1;\n            }\n        };\n        \n        return sortDirection === \"NONE\" ? initialRows : initialRows.sort(comparer);\n    };\n\n    handleFilterChange = filters => {\n        // const newFilters = { ...filters };\n        const oldFilter = this.state.filters;\n        const key = filters.column.key;\n\n        if (filters.filterTerm) {\n          oldFilter[key] = filters;\n        } else {\n          delete oldFilter[key];\n        }\n        return oldFilter;\n    };\n\n    setFilters(filters){\n        this.setState({filters});\n    }\n\n    render(){\n        var players = this.state.players;\n        const dPlayers = this.state.dPlayers;\n        const filters = this.state.filters;\n        const filteredRows = this.getRows(dPlayers, filters);\n        if(players &&players.length>0){\n            return(\n                <div>\n                    <h2 style={{display:'inline-block'}}>\n                        All PLayers Data \n                    </h2>\n                    &nbsp;\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.download.bind(this)}>\n                        Download PDF\n                    </Button>\n                    &nbsp;<span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.downloadAsExcell.bind(this)}>\n                        Download Excell\n                    </Button>\n                    <span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.refreshDataHandler.bind(this)}>\n                        Refresh Data\n                    </Button>\n                    <ReactDataGrid\n                        columns={this.columns}\n                        rowGetter={i => {\n                            return {\n                                srNo:i+1,\n                            ...filteredRows[i]\n                            }\n                            }\n                        }\n                        rowsCount={filteredRows.length}\n                        minHeight={500}\n                        toolbar={<Toolbar/>}\n                        onGridSort={(sortColumn, sortDirection) => this.setdPlayers(this.sortRows(players, sortColumn, sortDirection))}\n                        onAddFilter={filter => this.setFilters(this.handleFilterChange(filter))}\n                        onClearFilters={() => this.setFilters({})}\n                    />\n                </div>\n            )\n        }\n        return null;\n    }\n}\n\nexport default AllPlayerDetails;\n\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getHeaderObject ,USER_KEY} from './util';\nimport Constants from './Constants';\nimport { Table, Card, Button } from 'react-bootstrap';\n\n\nclass PlayerRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            count:null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPlayerRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPlayerRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n\n    remainingPlayerRequest(){\n        Axios.get(Constants.BASE_URL + '/getRemainingPlayersCount',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({count:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.remainingPlayerRequest();\n    }\n\n    render(){\n        const count = this.state.count;\n        if(count){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Players Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Type\n                                        </th>\n                                        <th>\n                                            Number of Players\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(count).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key.replace('_',' ')}\n                                            </td>\n                                            <td>\n                                                {count[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PlayerRemaining;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport LiveAuction from './LiveAuction';\nimport { Row,Col } from 'react-bootstrap';\nimport PointsRemaining from './PointsRemaining';\nimport YourTeam from './YourTeam';\nimport AllPlayerDetails from './AllPlayerDetails';\nimport PlayersRemaining from './PlayersRemaining';\n\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n          <Navigation/>\n          <br/>\n          <br/>\n          <Row style={{margin:'0px'}}>\n            <Col sm={12} lg={3} >\n              <LiveAuction/>\n              </Col>\n            <Col sm={12} lg={3} >\n              <PlayersRemaining/>\n              </Col>\n            <Col  sm={12} lg={3}>\n              <PointsRemaining/>\n            </Col>\n            <Col sm={12} lg={3}>\n              <YourTeam/>\n            </Col>\n            <Col sm={12}>\n              <br/>\n            </Col>\n            <Col sm={12}>\n              <AllPlayerDetails/>\n            </Col>\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { checkForJwt, saveJwt } from './util';\nimport Login from './Login';\nimport HomePage from './HomePage';\nimport axios from 'axios';\nimport constants from './Constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n\n  login(nickName){\n    axios.post(constants.BASE_URL+'/login',{nickName}).then((res)=>{\n      saveJwt(res.data.token)\n      this.forceUpdate();\n    },(err)=>{\n        if(err && err.response && err.response.data && err.response.data.message){\n          toast.error(err.response.data.message);\n        }\n      console.log(err.response);\n    })\n  }\n\n  render() {\n    const isAuthorized = checkForJwt();\n    return (\n      <div>{isAuthorized?<HomePage/>:<Login onLogin={this.login.bind(this)}/>}<ToastContainer /></div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}