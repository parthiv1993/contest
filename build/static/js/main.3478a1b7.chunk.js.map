{"version":3,"sources":["util.js","Login.js","Constants.js","Navigation.js","LiveAuction.js","PointsRemaining.js","YourTeam.js","AllPlayerDetails.js","PlayersRemaining.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["getJwtToken","localStorage","getItem","getHeaderObject","headers","Authorization","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","e","onLogin","preventDefault","setState","target","value","react_default","a","createElement","style","height","Card","margin","width","top","bottom","Header","Body","Form","onSubmit","onLoginClick","bind","Group","controlId","Label","Control","type","placeholder","onChange","onInputChange","Button","variant","Footer","React","Component","Constants","Navigation","clear","window","location","reload","startAuctionRequest","then","res","err","Axios","get","userName","Navbar","bg","Brand","href","concat","Nav","className","onClick","startAuctionHandler","logOut","LiveAuction","currentAuctionInfo","bidAmt","_this2","getLiveAuctionInfo","interval","setInterval","clearInterval","_this3","_","isEqual","data","bids","console","error","amt","Math","ceil","parseInt","_this4","playerId","doBidRequest","bidBy","post","_this5","markPlayerSoldRequest","_this6","bringNextPlayerRequest","currentPlayer","soldButtonName","length","Row","Col","sm","team","grade","nationality","soldTo","soldAt","marginLeft","step","onBlur","roundOff","handleBidInputChange","size","bid","markPlayerSoldHandler","bringNextPlayerHandler","DisplayBids","Table","striped","bordered","hover","map","index","key","PointsRemaining","points","remainingPointsRequest","as","float","onRefreshHandler","keys","YourTeam","getYourTeam","listStyle","marginRight","border","backgroundColor","player","sortRows","initialRows","sortColumn","sortDirection","rows","toConsumableArray","sort","b","handleFilterChange","filter","filters","newFilters","objectSpread","filterTerm","column","columns","sortable","filterable","Grid","_ref","players","_useState","useState","_useState2","slicedToArray","setRows","_useState3","_useState4","setFilters","filteredRows","getRows","react_data_grid_default","rowGetter","i","rowsCount","minHeight","onGridSort","onAddFilter","onClearFilters","AllPlayerDetails","refreshDataHandler","getAllPlayerData","doc","jsPDF","autoTable","head","body","save","display","download","AllPlayerDetails_Grid","PlayerRemaining","count","remainingPlayerRequest","replace","HomePage","src_Navigation","lg","src_LiveAuction","PlayersRemaining","src_PointsRemaining","src_YourTeam","src_AllPlayerDetails","App","nickName","axios","constants","token","debugged","jwt","decode","setItem","user","saveJwt","forceUpdate","log","isAuthorized","src_HomePage","src_Login","login","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3478a1b7.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport function getJwtToken(){\n    return localStorage.getItem('token');\n}\n\nexport function checkForJwt(){\n    if(getJwtToken()){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport function saveJwt(token){\n    try {\n        const debugged = jwt.decode(token);\n        if(debugged){\n            localStorage.setItem('token',token);\n            localStorage.setItem('user',debugged.user)\n        }\n        \n    }\n    catch(e){\n        console.error(e);\n    }\n    \n}\n\nexport function getHeaderObject(){\n    const token = getJwtToken();\n\n    return { 'headers': { 'Authorization': token } }\n}","import React from 'react';\nimport { Button, Row, Col, Table ,Card, Form} from 'react-bootstrap';\n\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            name : ''\n        }\n    }\n\n    onLoginClick(e){\n        this.props.onLogin(this.state.name);\n        e.preventDefault();\n    }\n\n    onInputChange(e){\n        this.setState({\n            name:e.target.value\n        });\n    }\n\n    render(){\n        return (\n            // <div class=\"container d-flex h-100\">\n            // <div class=\"row justify-content-center align-self-center\">\n            <div style={{height:'-webkit-fill-available'}}>\n            <Card style={ {\n                    margin: 'auto',\n                    width: '400px',\n                    top: '25%',\n                    bottom: '0'\n                }}>\n                <Card.Header>\n                    Login\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={this.onLoginClick.bind(this)}>\n                        <Form.Group controlId=\"formNickName\">\n                            <Form.Label>Nick Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter your given NickName\" onChange={this.onInputChange.bind(this)}/>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n                <Card.Footer>\n                    Don't have a login ? Contact Parthiv\n                </Card.Footer>\n            </Card>\n            </div>\n            // </div>\n            // <div style={{margin:'auto'}}>\n            //     <form>\n            //         <label>\n            //             NickName :\n            //         </label>\n            //         <input value={this.state.name} onChange={this.onInputChange.bind(this)}/>\n            //         <button onClick={this.onLoginClick.bind(this)}>Login</button>\n            //     </form>\n            // </div>\n        );\n    }\n}\n\nexport default Login;","export default {\n    // BASE_URL : 'http://localhost:8080/api',\n    BASE_URL : 'http://contest-ipl-contest-ipl.7e14.starter-us-west-2.openshiftapps.com/api',\n    LIVE_POLL_TIME : 5000,\n    POINTS_POLL_TIME : 60000,\n    MYTEAM_POLL_TIME : 60000\n}","import React, { Component } from 'react';\nimport {Navbar,Nav,Form,FormControl,Button} from 'react-bootstrap';\nimport Axios from 'axios';\nimport Constants from './Constants';\nimport { getJwtToken, getHeaderObject } from './util';\n\n\nclass Navigation extends Component {\n    logOut(){\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    startAuctionHandler(){\n        this.startAuctionRequest().then(\n            (res)=>{\n\n            },\n            (err)=>[\n\n            ]\n        )\n    }\n\n    startAuctionRequest(){\n        return Axios.get(Constants.BASE_URL +'/resetAuction',getHeaderObject());\n    }\n\n    render() {\n        const userName = localStorage.getItem('user') || 'User';\n        return(\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">{`Hi ${userName}`}</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                {/* <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#features\">Features</Nav.Link>\n                <Nav.Link href=\"#pricing\">Pricing</Nav.Link> */}\n                </Nav>\n                {\n                    userName=='Parthiv' &&\n                    <Button variant=\"outline-info\" onClick={this.startAuctionHandler.bind(this)}>Start Auction</Button>\n                }\n                &nbsp;\n                <Button variant=\"outline-info\" onClick={this.logOut.bind(this)}>Log Out</Button>\n            </Navbar>\n                    \n        )\n    }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Constants from './Constants';\nimport { Button, Row, Col, Table ,Card} from 'react-bootstrap';\nimport Axios from 'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport _ from 'lodash';\n\n// import {Navbar,Nav,Form,FormControl,Button} from 'react-bootstrap';\n\nclass LiveAuction extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentAuctionInfo : null,\n            bidAmt : null\n        }\n    }\n\n    componentDidMount(){\n        this.getLiveAuctionInfo();\n        this.interval = setInterval(()=>{\n            this.getLiveAuctionInfo();\n        },Constants.LIVE_POLL_TIME)\n    }\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getLiveAuctionInfo(){\n        Axios.get(Constants.BASE_URL + '/liveAuctionInfo',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.currentAuctionInfo)){\n                    \n                    const bidAmt = res.data.bids && res.data.bids[0] && res.data.bids[0].bidAmt+5\n                    this.setState({currentAuctionInfo:res.data,bidAmt})\n                }\n            },(err)=>{\n                console.error(err); \n            }\n        )\n    }\n\n    startAuction(e){\n        e.preventDefault();\n    }\n\n    roundOff(amt){\n        const bidAmt = Math.ceil(parseInt(amt.target.value)/5)*5;\n        this.setState({bidAmt});\n    }\n\n    handleBidInputChange(e){\n        this.setState({bidAmt:e.target.value});\n    }\n\n\n    bid(){\n        if(this.state.bidAmt && this.state.bidAmt>0){\n            const userName = localStorage.getItem('user') || 'User';\n            const playerId =this.state.currentAuctionInfo.playerId;\n            this.doBidRequest(playerId,this.state.bidAmt,userName).then(\n                (res)=>{\n                    this.getLiveAuctionInfo()\n                }\n            )\n        }\n    }\n\n    doBidRequest(playerId,bidAmt,bidBy){\n        return Axios.post(Constants.BASE_URL +'/addBid',{playerId,bidAmt,bidBy},getHeaderObject())\n    }\n\n    markPlayerSoldHandler(){\n        this.markPlayerSoldRequest(this.state.currentAuctionInfo.playerId).then(\n            (res)=>{\n                this.getLiveAuctionInfo()\n            }\n        )\n    }\n\n    markPlayerSoldRequest(playerId){\n        return Axios.post(Constants.BASE_URL +'/markAsSold',{playerId},getHeaderObject());\n    }\n    \n    bringNextPlayerHandler(){\n        this.bringNextPlayerRequest().then(\n            res=>{\n                this.getLiveAuctionInfo();\n            },err=>{\n                console.err(err);\n            }\n        )\n    }\n    bringNextPlayerRequest(){\n        return Axios.get(Constants.BASE_URL +'/bringNextPlayer',getHeaderObject());\n    }\n\n    render() {\n        const userName = localStorage.getItem('user') || 'User';\n        const currentPlayer = this.state.currentAuctionInfo;\n        const bidsPresent = currentPlayer && currentPlayer.bids && currentPlayer.bids.length && currentPlayer.bids.length>0 ? true : false;\n        const soldButtonName = bidsPresent ? 'Mark as Sold' : 'Mark as Unsold';\n        if(currentPlayer){\n            return(\n                <Card>\n                    <Card.Header>\n                        Current/ Last Player\n                    </Card.Header>\n                    <Card.Body>\n                        <Row style={{margin:'0px'}}>\n                            <Col sm={12}>\n                                {`PlayerId : ${currentPlayer.playerId}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Player Name : ${currentPlayer.name}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Team : ${currentPlayer.team}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Grade : ${currentPlayer.grade}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Nationality : ${currentPlayer.nationality}`}\n                            </Col>\n                            {\n                                currentPlayer.soldTo &&\n                                    <span>\n                                        <Col sm={12}>\n                                            {`Sold to : ${currentPlayer.soldTo}`}\n                                        </Col>\n                                        <Col sm={12}>\n                                            {`Sold for : ${currentPlayer.soldAt} points`}\n                                        </Col>\n                                        \n                                    </span>\n                            }\n                            {!currentPlayer.soldTo &&\n                                <Col sm={12}>\n                                    <input style={{margin : '15px',marginLeft:'0px'}} type='number' step='5' \n                                        value={this.state.bidAmt}\n                                        placeholder='Bid Amount'\n                                        onBlur={this.roundOff.bind(this)}\n                                        onChange={this.handleBidInputChange.bind(this)}/>\n                                    {userName != 'readOnly' && <Button size='sm' onClick={this.bid.bind(this)}>Bid</Button>}\n                                </Col>\n                            }\n                            {!currentPlayer.soldTo && (userName === 'Parthiv' || userName ==='Nikhil') && \n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"danger\" \n                                            onClick={this.markPlayerSoldHandler.bind(this)}>{soldButtonName}\n                                        </Button>\n                                    </Col>\n                            }\n                            \n                            {\n                                currentPlayer.soldTo &&\n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"info\" \n                                            onClick={this.bringNextPlayerHandler.bind(this)}>Get Next Player\n                                        </Button>\n                                    </Col>\n                            }\n                            <Col sm={12}>\n                                {DisplayBids(currentPlayer.bids)}\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nconst DisplayBids=(bids)=>{\n    if(bids && bids.length>0) { \n        return(<div>\n            <h4>Previous Bids:</h4>\n            <Table striped={true} bordered={true} hover={true} size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>\n                            Bid By\n                        </th>\n                        <th>\n                            Bid Amt\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {bids.map((bid,index)=><tr key={index}>\n                    <td>\n                        {bid.bidBy}\n                    </td>\n                    <td>\n                        {bid.bidAmt}\n                    </td>\n                </tr>)}\n                </tbody>\n            </Table>\n        </div>)\n    }\n    return (<div>You Can Start Bidding</div>);\n}\n\nexport default LiveAuction;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table, Card ,Button} from 'react-bootstrap';\n\n\nclass PointsRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            points : null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPointsRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPointsRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    remainingPointsRequest(){\n        Axios.get(Constants.BASE_URL + '/remaningPoints',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({points:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n\n    onRefreshHandler(){\n        this.remainingPointsRequest();\n    }\n\n    render(){\n        const points =this.state.points;\n        const user = localStorage.getItem('user');\n        if(points ){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Points Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Team Owner\n                                        </th>\n                                        <th>\n                                            Points\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(points).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key}\n                                            </td>\n                                            <td>\n                                                {points[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PointsRemaining;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card,Button} from 'react-bootstrap';\n\n\nclass YourTeam extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            team : null\n        }\n    }\n\n    componentDidMount(){\n        this.getYourTeam();\n        this.interval = setInterval(()=>{\n            this.getYourTeam();\n        },Constants.MYTEAM_POLL_TIME)\n    }\n\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getYourTeam(){\n        Axios.get(Constants.BASE_URL + '/myTeam',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.team)){\n                    this.setState({team:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.getYourTeam();\n    }\n\n    render(){\n        const team = this.state.team;\n        if(team){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        My Team\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <div className='legend'>\n                            <ul style={ {listStyle: 'none' }}>\n                                <li style={{ float: 'left',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '12px', height: '12px', margin: '2px',backgroundColor:'#a0a1e4' }}>\n                                     </span>\n                                     Indian\n                                </li>\n                                <li style={{ float: 'right',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '12px', height: '12px', margin: '2px',backgroundColor:'#d8bd56' }}>\n                                     </span>\n                                     Overseas\n                                </li>\n                            </ul>\n                        </div>\n                    <Table bordered='true' hover='true' size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Sr.\n                                    </th>\n                                    <th>\n                                        Player Name\n                                    </th>\n                                    <th>\n                                        Points\n                                    </th>\n                                    <th>\n                                        Team\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    team.map(\n                                        (player,index)=>\n                                            <tr key={index}>\n                                                <td>\n                                                    {index+1}\n                                                </td>\n                                                <td>\n                                                    {player.name}\n                                                </td>\n                                                <td>\n                                                    {player.soldAt}\n                                                </td>\n                                                <td>\n                                                    {player.team}\n                                                </td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n                \n            )\n        }\n        return null;\n    }\n}\n\nexport default YourTeam;","import React, { useState }  from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card, Button} from 'react-bootstrap';\nimport ReactDataGrid from 'react-data-grid';\n// import { Toolbar, Data } from \"react-data-grid-addons\";\nimport './Grid.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n// const selectors = Data.Selectors;\nconst sortRows = (initialRows, sortColumn, sortDirection) => rows => {\n    const comparer = (a, b) => {\n        if (sortDirection === \"ASC\") {\n            return a[sortColumn] > b[sortColumn] ? 1 : -1;\n        } else if (sortDirection === \"DESC\") {\n            return a[sortColumn] < b[sortColumn] ? 1 : -1;\n        }\n    };\n    return sortDirection === \"NONE\" ? initialRows : [...rows].sort(comparer);\n};\n\nconst handleFilterChange = filter => filters => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\nconst columns = [\n    { key: 'playerId', name: 'Player ID', sortable:true,filterable : true},\n    { key: 'name', name: 'Player Name' ,sortable:true,filterable : true},\n    { key : 'grade',name:'Grade',sortable:true,filterable :true},\n    { key: 'team', name: 'IPL Team' ,sortable:true,filterable :true},\n    { key: 'soldTo', name: 'Sold To' ,sortable:true,filterable : true} ,\n    { key: 'nationality', name: 'Nationality' ,sortable:true,filterable : true} ,\n    { key: 'soldAt', name: 'Price' ,sortable:true} \n]\n\nfunction getRows(rows, filters) {\n    return rows;\n    // return selectors.getRows({ rows, filters });\n}\n\nfunction Grid({ players }) {\n    const [rows, setRows] = useState(players);\n    const [filters, setFilters] = useState({});\n    const filteredRows = getRows(rows, filters);\n    return (\n        <ReactDataGrid\n            columns={columns}\n            rowGetter={i => filteredRows[i]}\n            rowsCount={filteredRows.length}\n            minHeight={500}\n            // toolbar={<Toolbar enableFilter={true} />}\n            onGridSort={(sortColumn, sortDirection) => setRows(sortRows(players, sortColumn, sortDirection))}\n            onAddFilter={filter => setFilters(handleFilterChange(filter))}\n            onClearFilters={() => setFilters({})}\n      />\n    );\n}\n\nclass AllPlayerDetails extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            players : []\n        }\n    }\n\n    componentDidMount(){\n        this.getAllPlayerData();\n    }\n    \n    getAllPlayerData(){\n        Axios.get(Constants.BASE_URL + '/allPlayers',getHeaderObject()).then(\n            (res)=>{\n                this.setState({players:res.data})\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    refreshDataHandler= ()=>{\n\n        this.getAllPlayerData();\n    }\n    \n    download (){\n        try{\n            const doc = new jsPDF();\n\n            doc.autoTable({\n                head: [['ID','Player Name','Team','Sold At','Sold To','Grade','Nationality']],\n                body:this.state.players.map(player=>\n                    [\n                        player.playerId,\n                        player.name,\n                        player.team,\n                        player.soldAt,\n                        player.soldTo,\n                        player.grade,\n                        player.nationality\n                    ]\n                )\n            });\n            doc.save('summary.pdf');\n        }\n        catch(e){\n\n        }\n    }\n\n    render(){\n        var players = this.state.players;\n        if(players &&players.length>0){\n            return(\n                <div>\n                    <h2 style={{display:'inline-block'}}>\n                        All PLayers Data \n                    </h2>\n                    &nbsp;\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.download.bind(this)}>\n                        Download Summary\n                    </Button>\n                    <span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.refreshDataHandler.bind(this)}>\n                        Refresh Data\n                    </Button>\n                    <Grid players={players}/>\n                </div>\n            )\n        }\n        return null;\n    }\n}\n\nexport default AllPlayerDetails;\n\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table, Card, Button } from 'react-bootstrap';\n\n\nclass PlayerRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            count:null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPlayerRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPlayerRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n\n    remainingPlayerRequest(){\n        Axios.get(Constants.BASE_URL + '/getRemainingPlayersCount',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({count:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.remainingPlayerRequest();\n    }\n\n    render(){\n        const count = this.state.count;\n        const user = localStorage.getItem('user');\n        if(count){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Players Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Grade\n                                        </th>\n                                        <th>\n                                            Number of Players\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(count).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key.replace('_',' ')}\n                                            </td>\n                                            <td>\n                                                {count[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PlayerRemaining;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport LiveAuction from './LiveAuction';\nimport { Row,Col } from 'react-bootstrap';\nimport PointsRemaining from './PointsRemaining';\nimport YourTeam from './YourTeam';\nimport AllPlayerDetails from './AllPlayerDetails';\nimport PlayersRemaining from './PlayersRemaining';\n\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n          <Navigation/>\n          <br/>\n          <br/>\n          <Row style={{margin:'0px'}}>\n            <Col sm={12} lg={3} >\n              <LiveAuction/>\n              </Col>\n            <Col sm={12} lg={3} >\n              <PlayersRemaining/>\n              </Col>\n            <Col  sm={12} lg={3}>\n              <PointsRemaining/>\n            </Col>\n            <Col sm={12} lg={3}>\n              <YourTeam/>\n            </Col>\n            <Col sm={12}>\n              <br/>\n            </Col>\n            <Col sm={12}>\n              <AllPlayerDetails/>\n            </Col>\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { checkForJwt, saveJwt } from './util';\nimport Login from './Login';\nimport HomePage from './HomePage';\nimport axios from 'axios';\nimport constants from './Constants';\n\nclass App extends Component {\n\n  login(nickName){\n    axios.post(constants.BASE_URL+'/login',{nickName}).then((res)=>{\n      saveJwt(res.data.token)\n      this.forceUpdate();\n    },(err)=>{\n      console.log(err);\n    })\n  }\n\n  render() {\n    const isAuthorized = checkForJwt();\n    return (\n      <div>{isAuthorized?<HomePage/>:<Login onLogin={this.login.bind(this)}/>}</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}